<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>More than seven</title>
    <link>/index.xml</link>
    <description>Recent content on More than seven</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-uk</language>
    <lastBuildDate>Wed, 29 Mar 2017 13:56:00 +0000</lastBuildDate>
    <atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Kubernetes configuration without the YAML</title>
      <link>/2017/03/29/kubernetes-configuration-without-the-yaml/</link>
      <pubDate>Wed, 29 Mar 2017 13:56:00 +0000</pubDate>
      
      <guid>/2017/03/29/kubernetes-configuration-without-the-yaml/</guid>
      <description>

&lt;p&gt;Tomorrow at KubeCon in Berlin I&amp;rsquo;m running a birds-of-a-feather session to talk
about Kubernetes configuration. Specifically we&amp;rsquo;ll be talking about whether
Kubernetes configuration benefits from a domain specific language. If you&amp;rsquo;re
at the conference and this sounds interesting &lt;a href=&#34;http://sched.co/9Tcc&#34;&gt;come along&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;the-problem&#34;&gt;The problem&lt;/h2&gt;

&lt;p&gt;The fact the programme committee accepted the session proposa is hopefully a good
indication that at least some other people in the community think this is an
interesting topic to discuss. I&amp;rsquo;ve also had a number of conversations in person
and on the internet about similar areas.&lt;/p&gt;

&lt;p&gt;There are a number of other traces of concerns with using YAML as the main user
interface to Kubernetes configuration. This comment from Brian Grant of Google on the
Kubernetes Config SIG mailing list for instance:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;We&amp;rsquo;ve had a few complaints that YAML is ugly, error prone, hard to read, etc.
Are there any other alternatives we might want to support?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And &lt;a href=&#34;https://twitter.com/jbeda/status/833408476437110784&#34;&gt;this one&lt;/a&gt; from Joe Beda,
one of the creators of Kubernetes:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;I want to go on record: the amount of yaml required to do anything in k8s is a
tragedy. Something we need to solve. (Subtweeting HN comment)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This quote from the &lt;a href=&#34;http://queue.acm.org/detail.cfm?id=2898444&#34;&gt;Borg, Omega and Kubernetes paper in ACM Queue, Volume 14, issue 1&lt;/a&gt;
nicely sums up my feelings:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;The language to represent the data should be a simple, data-only format
such as JSON or YAML, and programmatic modification of this data should
be done in a real programming language&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This quote also points at the problem I see at the moment. The configuration and the
management of that configuration are &lt;em&gt;separate&lt;/em&gt; but related concerns. Far too many
people couple these together, ultimately moving all of the management complexity
onto people. That&amp;rsquo;s a missed opportunity in my view. The Kubernetes API is my
favourite think about the project, I&amp;rsquo;ve waxed lyrical about it allowing for
different higher-level user interfaces for different users to all interact
on the same base platform. But treating what is basically the wire format
as a user interface is just needlessly messy.&lt;/p&gt;

&lt;p&gt;But what advantages do we get using a programming language to modify the data?
For me it comes down to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Avoiding repetition&lt;/li&gt;
&lt;li&gt;Combining external inputs&lt;/li&gt;
&lt;li&gt;Building tools to enforce correctness (linting, unit testing, etc.)&lt;/li&gt;
&lt;li&gt;The abililty to introduce abstractions&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It&amp;rsquo;s the last part I find most compelling. Building things to allow others
to interact with a smaller domain specific abstraction is one way of scaling
expertise. The infrastructure as code space I&amp;rsquo;ve been involved in has lots of
stories to tell around different good (and bad) ways of mixing data with code,
but the idea that data on it&amp;rsquo;s own is enough without higher-level abstractions
doesn&amp;rsquo;t hold up in my experience.&lt;/p&gt;

&lt;h2 id=&#34;what-can-i-use-instead&#34;&gt;What can I use instead?&lt;/h2&gt;

&lt;p&gt;Lukily various people at this point have build tools in this space. I&amp;rsquo;m not sure
could or should be a single answer to the question (whether there should be a
default is a harder question to answer) but the following definitely all show
what&amp;rsquo;s possible.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://jsonnet.org/&#34;&gt;Jsonnet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/anguslees/kubecfg&#34;&gt;kubecfg&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/garethr/garethr-kubernetes&#34;&gt;Puppet Kubernetes types&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/errordeveloper/kubeplay&#34;&gt;Kubeplay&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/maxmanuylov/terraform-provider-kubernetes&#34;&gt;Terraform&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/fkorotkov/k8s-kotlin-dsl&#34;&gt;Kotlin DSL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/doriordan/skuber&#34;&gt;Skuber&lt;/a&gt; (Scala DSL for Kubernetes)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Obviously &lt;a href=&#34;https://puppet.com/blog/managing-kubernetes-configuration-puppet&#34;&gt;I wrote one of these&lt;/a&gt;
so I&amp;rsquo;m biased but different tools work for different people and in different
contexts. For example Skuber looks nice but I mainly don&amp;rsquo;t like Scala. And
I&amp;rsquo;ve been using Jsonnet for Packer templates recently with success, so I&amp;rsquo;m
very interested in kubecfg which provides a nice Kubernetes wrapper to that
tool.&lt;/p&gt;

&lt;p&gt;Ultimately this is still a developing space, but compared to a year ago it is
now definitely moving. For me, I hope the default for managing Kubernetes
configuration slowly but surely switches away from just hand rolling data.
Towards what, only time and people reporting what works for them will tell.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Republishing service manual content</title>
      <link>/2017/01/01/republishing-service-manual-content/</link>
      <pubDate>Sun, 01 Jan 2017 23:00:00 +0000</pubDate>
      
      <guid>/2017/01/01/republishing-service-manual-content/</guid>
      <description>&lt;p&gt;One of the many things I did some work on while at
&lt;a href=&#34;https://gds.blog.gov.uk/&#34;&gt;GDS&lt;/a&gt; back in 2013 was the &lt;a href=&#34;https://www.gov.uk/service-manual&#34;&gt;Government Service Design
Manual&lt;/a&gt;. This was intended to be a
central resource for teams across (and outside) Government about how to
go about building, designing and running modern internet-era services.
It was a good snapshot of opinions from the people that made up GDS on a
wide range of different topics. Especially for the people who spent time
in the field with other departments, having an official viewpoint published
publicly was hugely helpful.&lt;/p&gt;

&lt;p&gt;Recently the Service Manual &lt;a href=&#34;https://gds.blog.gov.uk/2016/12/19/introducing-the-next-stage-of-the-service-manual/&#34;&gt;got a bit of a relaunch&lt;/a&gt;
but unfortunately this involved deleting much of the content about
operations and running a service. Even more unfortunately the service
manual is now described as something that:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;exists to help people across government build services that meet the
Digital Service Standard and prepare for service assessments.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So in basic terms it&amp;rsquo;s refocusing on helping people pass the exam rather
than being all about learning. Which is a shame. Compare that with the
original intent:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Build services so good that people prefer to use them&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;However, all that content is not lost. Luckily the content is &lt;a href=&#34;https://github.com/alphagov/government-service-design-manual&#34;&gt;archived on GitHub&lt;/a&gt;
and was published under the terms of the &lt;a href=&#34;http://www.nationalarchives.gov.uk/doc/open-government-licence/version/2/&#34;&gt;Open Government License&lt;/a&gt;
which allows for anyone to &lt;em&gt;&amp;ldquo;copy, publish, distribute and transmit the Information&amp;rdquo;&lt;/em&gt;.
So I&amp;rsquo;m choosing to republish a few of the pieces I wrote and found
useful when talking to and assisting other Government departments. These
represent an interesting snapshot from a few years ago, but I think
mainly stand the test of time, even if I&amp;rsquo;d change a few things if I
wrote them today.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.morethanseven.net/2017/01/01/what-is-devops/&#34;&gt;What is
Devops?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.morethanseven.net/2017/01/01/agile-and-it-service-management/&#34;&gt;Agile and IT Service Management&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.morethanseven.net/2017/01/01/user-stories-for-web-operations/&#34;&gt;User stories for web operations teams&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>What is Devops?</title>
      <link>/2017/01/01/what-is-devops/</link>
      <pubDate>Sun, 01 Jan 2017 22:00:00 +0000</pubDate>
      
      <guid>/2017/01/01/what-is-devops/</guid>
      <description>

&lt;p&gt;&lt;em&gt;This post was originally written as part of the Government Service
Design Manual while I was working for the UK Cabinet Office. Since my
original in 2013 it was improved upon &lt;a href=&#34;https://github.com/alphagov/government-service-design-manual/blob/master/service-manual/operations/devops.md&#34;&gt;by several
others&lt;/a&gt;
I&amp;rsquo;m republishing it here under the terms of the &lt;a href=&#34;http://www.nationalarchives.gov.uk/doc/open-government-licence/version/2/&#34;&gt;Open Government
licence&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Devops is a cultural and professional movement in response to the
mistakes commonly made by large organisations. Often organisations will
have very separate units for:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;development&lt;/li&gt;
&lt;li&gt;quality assurance&lt;/li&gt;
&lt;li&gt;operations business&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In extreme cases these units may be:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;based in different locations&lt;/li&gt;
&lt;li&gt;work for different organisations&lt;/li&gt;
&lt;li&gt;under completely different management structures&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Communication costs between these units, and their individual
incentives, leads to slow delivery and a mountain of interconnected
processes.&lt;/p&gt;

&lt;p&gt;This is what Devops aims to correct. It is not a methodology or
framework, but a set of principles and a willingness to break down
silos. Specifically Devops is all about:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#culture&#34;&gt;culture&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#automation&#34;&gt;automation&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#measurement&#34;&gt;measurement&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#sharing&#34;&gt;sharing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;culture&#34;&gt;Culture&lt;/h3&gt;

&lt;p&gt;Devops needs a change in attitude so shared ownership and collaboration
are the common working practices in building and managing a service.
This culture change is especially important for established
organisations.&lt;/p&gt;

&lt;h3 id=&#34;automation&#34;&gt;Automation&lt;/h3&gt;

&lt;p&gt;Many business processes are ready to be automated. Automation removes
manual, error-prone tasks &amp;ndash; allowing people to concentrate on the
quality of the service. Common areas that benefit from automation are:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;release management (releasing software)&lt;/li&gt;
&lt;li&gt;provisioning&lt;/li&gt;
&lt;li&gt;configuration management&lt;/li&gt;
&lt;li&gt;systems integration&lt;/li&gt;
&lt;li&gt;monitoring&lt;/li&gt;
&lt;li&gt;orchestration (the arrangement and maintenance of complex computer
systems)&lt;/li&gt;
&lt;li&gt;testing&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;measurement&#34;&gt;Measurement&lt;/h3&gt;

&lt;p&gt;Data can be incredibly powerful for implementing change, especially when
it’s used to get people from different groups involved in the quality of
the end-to-end service delivery. Collecting information from different
teams and being able to compare it across former silos can implement
change on its own.&lt;/p&gt;

&lt;h3 id=&#34;sharing&#34;&gt;Sharing&lt;/h3&gt;

&lt;p&gt;People from different backgrounds (ie development and operations) often
have different, but overlapping skill sets. Sharing between groups will
spread an understanding of the different areas behind a successful
service, so encourage it. Resolving issues will then be more about
working together and not negotiating contracts.&lt;/p&gt;

&lt;h2 id=&#34;why-devops&#34;&gt;Why Devops&lt;/h2&gt;

&lt;p&gt;The quality of your service will be compromised if teams can&amp;rsquo;t work
together, specifically:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;those who build and test software&lt;/li&gt;
&lt;li&gt;those that run it in production&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The root cause is often functional silos; when one group owns a specific
area (say quality) it’s easy for other areas to assume that it’s no
longer their concern.&lt;/p&gt;

&lt;p&gt;This attitude is toxic, especially in areas such as:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;quality&lt;/li&gt;
&lt;li&gt;release management&lt;/li&gt;
&lt;li&gt;performance&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;High quality digital services need to be able to adapt quickly to user
needs, and this can only happen with close collaboration between
different groups.&lt;/p&gt;

&lt;p&gt;Make sure the groups in your team:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;have a shared sense of ownership of the service&lt;/li&gt;
&lt;li&gt;have a shared sense of the problem&lt;/li&gt;
&lt;li&gt;develop a culture of making measurable improvements to how things work&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;good-habits&#34;&gt;Good habits&lt;/h2&gt;

&lt;p&gt;Devops isn’t a project management methodology, but use these good habits
in your organisation. While not unique to Devops, they help with
breaking down silos when used with the above principles:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;cross-functional teams &amp;ndash; make sure your
teams are made up of people from different functions (this helps with
the team owning the end-to-end quality of service and makes it easier to
break down silos)&lt;/li&gt;
&lt;li&gt;widely shared metrics &amp;ndash; it’s important
for everyone to know what ‘good’ looks like so share high and low
level metrics as widely as possible as it builds understanding&lt;/li&gt;
&lt;li&gt;automating repetitive tasks &amp;ndash; use software development to automate
tasks across the service as it:

&lt;ul&gt;
&lt;li&gt;encourages a better understanding of the whole service&lt;/li&gt;
&lt;li&gt;frees up smart people from doing repetitive manual tasks&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;post-mortems &amp;ndash; issues will happen so it’s critical that everyone
across different teams learns from them; running post-mortems (an
analysis session after an event) with people from different groups is a
great way of spreading knowledge&lt;/li&gt;
&lt;li&gt;regular releases
&amp;ndash; the capacity for releasing software is often limited in siloed
organisations, because the responsibilities of the different parts of
the release are often spread out across teams &amp;ndash; getting to a point
where you can release regularly (even many times a day) requires extreme
collaboration and clever automation&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;warning-signs&#34;&gt;Warning signs&lt;/h2&gt;

&lt;p&gt;Like agile, the term Devops is often used for marketing or promotional
purposes. This leads to a few common usages, which aren’t necessarily in
keeping with what’s been said here. Watch out for:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Devops tools (nearly always marketing)&lt;/li&gt;
&lt;li&gt;a Devops team (in many cases this is just a new silo of skills and
knowledge)&lt;/li&gt;
&lt;li&gt;Devops as a job title (you wouldn’t call someone “an agile”)&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;further-reading&#34;&gt;Further reading&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.chef.io/blog/2010/07/16/what-devops-means-to-me/&#34;&gt;What Devops Means to
Me&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.jedi.be/blog/2010/02/12/what-is-this-devops-thing-anyway/&#34;&gt;What is this Devops thing
anyway?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://dev2ops.org/2010/02/what-is-devops/&#34;&gt;What is Devops? (and the wall of
confusion)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://continuousdelivery.com/2012/10/theres-no-such-thing-as-a-devops-team/&#34;&gt;There’s no such thing as a &amp;ldquo;Devops
Team&amp;rdquo;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Agile and IT service management</title>
      <link>/2017/01/01/agile-and-it-service-management/</link>
      <pubDate>Sun, 01 Jan 2017 21:00:00 +0000</pubDate>
      
      <guid>/2017/01/01/agile-and-it-service-management/</guid>
      <description>

&lt;p&gt;&lt;em&gt;This post was originally written as part of the Government Service
Design Manual while I was working for the UK Cabinet Office. Since my
original in 2013 it was improved upon &lt;a href=&#34;https://github.com/alphagov/government-service-design-manual/blob/master/service-manual/operations/service-management.md&#34;&gt;by several
others&lt;/a&gt;
I&amp;rsquo;m republishing it here under the terms of the &lt;a href=&#34;http://www.nationalarchives.gov.uk/doc/open-government-licence/version/2/&#34;&gt;Open Government
licence&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;The Digital by Default standard
says that organisations should (emphasis on &lt;em&gt;operate&lt;/em&gt; added):&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Put in place a sustainable multidisciplinary team that can design, build
and &lt;em&gt;operate&lt;/em&gt; the service, led by a suitably skilled and senior service manager
with decision-making responsibility.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;This implies a change to how many organisations have traditionally run services,
often with a team or organisation building a service separate from the one running it.
This change however does not mean ignoring existing good practice when it comes to service
management.&lt;/p&gt;

&lt;h2 id=&#34;agile-and-service-management&#34;&gt;Agile and service management&lt;/h2&gt;

&lt;p&gt;The principles of IT service management (ITSM) and those of agile do not necessarily
conflict &amp;ndash; issues can arise however when organisations implement rigid processes
without considering wider service delivery matters, or design and build services
without thinking about how they will be operated.&lt;/p&gt;

&lt;p&gt;The &lt;a href=&#34;http://agilemanifesto.org/&#34;&gt;agile manifesto&lt;/a&gt; makes the case for:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Individuals and interactions over processes and tools&lt;/li&gt;
&lt;li&gt;Working software over comprehensive documentation&lt;/li&gt;
&lt;li&gt;Customer collaboration over contract negotiation&lt;/li&gt;
&lt;li&gt;Responding to change over following a plan&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It is too easy to position service management as opposed to agile as
traditional service management practices can be viewed as focusing on processes, tools,
documentation, planning and contract negotiation &amp;ndash; the items on the right hand
side of the points above.&lt;/p&gt;

&lt;p&gt;However, the agile manifesto goes on to say:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;That is, while there is value in the items on the right, we
value the items on the left more.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;To build and run a successful service you will need to work on suitable
processes and manage third party relationships. Using existing service management
frameworks (especially as a starting point) is one approach to this problem.&lt;/p&gt;

&lt;h2 id=&#34;itil&#34;&gt;ITIL&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://www.axelos.com/itil&#34;&gt;ITIL&lt;/a&gt; (the Information Technology Infrastructure
Library) is one such framework. ITIL does a particularly good job of facilitating shared
language. For instance it&amp;rsquo;s definition of a service is:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A service is a means of delivering value to customers by facilitating outcomes
customers want to achieve.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The current version of ITIL currently provides 5 volumes and 26 processes
describing in detail various aspects of service management:&lt;/p&gt;

&lt;h3 id=&#34;service-strategy&#34;&gt;Service Strategy&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;IT service management&lt;/li&gt;
&lt;li&gt;Service portfolio management&lt;/li&gt;
&lt;li&gt;Financial management for IT services&lt;/li&gt;
&lt;li&gt;Demand management&lt;/li&gt;
&lt;li&gt;Business relationship management&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;service-design&#34;&gt;Service Design&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Design coordination&lt;/li&gt;
&lt;li&gt;Service Catalogue management&lt;/li&gt;
&lt;li&gt;Service level management&lt;/li&gt;
&lt;li&gt;Availability management&lt;/li&gt;
&lt;li&gt;Capacity Management&lt;/li&gt;
&lt;li&gt;IT service continuity management&lt;/li&gt;
&lt;li&gt;Information security management system&lt;/li&gt;
&lt;li&gt;Supplier management&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;service-transition&#34;&gt;Service Transition&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Transition planning and support&lt;/li&gt;
&lt;li&gt;Change management&lt;/li&gt;
&lt;li&gt;Service asset and configuration management&lt;/li&gt;
&lt;li&gt;Release and deployment management&lt;/li&gt;
&lt;li&gt;Service validation and testing&lt;/li&gt;
&lt;li&gt;Change evaluation&lt;/li&gt;
&lt;li&gt;Knowledge management&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;service-operation&#34;&gt;Service Operation&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Event management&lt;/li&gt;
&lt;li&gt;Incident management&lt;/li&gt;
&lt;li&gt;Request fulfillment&lt;/li&gt;
&lt;li&gt;Problem management&lt;/li&gt;
&lt;li&gt;Identity management&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;continual-service-improvement&#34;&gt;Continual Service Improvement&lt;/h3&gt;

&lt;h3 id=&#34;functions&#34;&gt;Functions&lt;/h3&gt;

&lt;p&gt;ITIL also describes four functions that should cooperate together to form
an effective service management capability.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Service operations&lt;/li&gt;
&lt;li&gt;Technical management&lt;/li&gt;
&lt;li&gt;Application management&lt;/li&gt;
&lt;li&gt;Operations management&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;the-importance-of-implementation&#34;&gt;The importance of implementation&lt;/h2&gt;

&lt;p&gt;The above processes and functions make for an excellent high level list of topics
to discuss when establishing an operating model for your service, whether
or not you adopt the formal methods. In many cases if you have well understood,
well established and well documented processes in place for all of the above
you should be in a good position to run your service.&lt;/p&gt;

&lt;p&gt;When looking to combine much of the rest of the guidance on the service manual
with ITIL or other service management frameworks it is important to challenge
existing implementations. This is less about the actual implementation and more often
about the problems that implementation was designed to originally solve.&lt;/p&gt;

&lt;h3 id=&#34;an-example-service-transition&#34;&gt;An example &amp;ndash; service transition&lt;/h3&gt;

&lt;p&gt;As an example ITIL talks a great deal about Service Transition &amp;ndash; getting working functionality
into the hands of the users of the service. This is a key topic for The Digital Service Standard
too which says that teams should:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Make sure that you have the capacity and technical flexibility to update and
improve the service on a very frequent basis.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&#34;https://www.gov.uk&#34;&gt;GOV.UK&lt;/a&gt; for instance made more than 100 production releases
&lt;a href=&#34;https://gds.blog.gov.uk/2012/11/02/regular-releases-reduce-risk/&#34;&gt;during its first two weeks&lt;/a&gt; after launch.&lt;/p&gt;

&lt;p&gt;This high rate of change tends to challenge existing processes designed for a
slower rate of change. If you are releasing your service every month or every 6 months
then a manual process (like a weekly or monthly in-person change approval board or CAB) may be
the most suitable approach. If you&amp;rsquo;re releasing many times a day then the approach to how
change is evaluated, tested and managed tends towards being more automated. This
moves effort from occasional but manual activities to upfront design and automation
work. More work is put in to assure the processes rather than putting all the effort
into assuring a specific &lt;em&gt;transition&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Service management frameworks tend to acknowledge this, for instance ITIL has a
concept of a standard change (something commonly done, with known risks
and hence pre-approved), but a specific implementation in a given organisation
might not.&lt;/p&gt;

&lt;h2 id=&#34;other-frameworks-exist&#34;&gt;Other frameworks exist&lt;/h2&gt;

&lt;p&gt;It is important to note that other service management frameworks and standards
exist, including some that are of a similar size and scope to ITIL:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/ISO/IEC_20000&#34;&gt;ISO/IEC 20000&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.microsoft.com/MOF&#34;&gt;Microsoft Operations Framework&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Many organisations also use smaller processes and integrate them together.
The needs of your service and organisation will determine what works best for you.&lt;/p&gt;

&lt;h2 id=&#34;problematic-concepts&#34;&gt;Problematic concepts&lt;/h2&gt;

&lt;p&gt;Some traditional language tends to cause some confusion when discussing service
management alongside agile. It&amp;rsquo;s generally best to avoid the following terms when possible,
although given their widespread usage this isn&amp;rsquo;t always possible. It is however worth
being aware of the problems these concepts raise.&lt;/p&gt;

&lt;h3 id=&#34;projects&#34;&gt;Projects&lt;/h3&gt;

&lt;p&gt;Projects tend to imply a start and an end. The main goal of project work is to
complete it, to reach the end. Especially for software development the project can
too often be viewed as &lt;em&gt;done&lt;/em&gt; when the software is released. What happens after that
is another problem entirely &amp;ndash; and often someone else&amp;rsquo;s problem.&lt;/p&gt;

&lt;p&gt;However when building services the main goal is to meet user needs
These needs may change over time, and are only met by software that is running in
production and available to those users.&lt;/p&gt;

&lt;p&gt;This doesn&amp;rsquo;t mean not breaking work down into easily understandable parts, but stories,
sprints and epics are much more
suited to agile service delivery.&lt;/p&gt;

&lt;h3 id=&#34;business-as-usual&#34;&gt;Business as usual&lt;/h3&gt;

&lt;p&gt;The concept of business as usual also clashes with a model of continuous
service improvement. It immediately brings to mind before and after
states, often with the assumption that change is both much slower and
more constrained during &lt;em&gt;business as usual&lt;/em&gt;. In reality, until you put your
service in the hands of real users as part of an alpha
or beta you won&amp;rsquo;t have all the information
needed to build the correct service. And even once you pass the live standard
you will be expected to:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;continuously update and improve the service on the basis of user feedback,
performance data, changes to best practice and service demand&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;further-reading&#34;&gt;Further reading&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.slideshare.net/nuwulang/functions-in-service-operation&#34;&gt;Functions in service management&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/ITIL&#34;&gt;ITIL on Wikipedia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.best-management-practice.com/gempdf/itsmf_an_introductory_overview_of_itil_v3.pdf&#34;&gt;Introduction to ITIL v3&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.ingineering.it/post/59414765140/itil-vs-devops-slugfest-or-lovefest&#34;&gt;Discussion of Devops and ITIL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://changeandrelease.com/2014/04/05/devops-and-itil-continuous-delivery-doesnt-stop-at-software/&#34;&gt;Discussion of ITIL and Continuous Delivery&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>User stories for web operations teams</title>
      <link>/2017/01/01/user-stories-for-web-operations/</link>
      <pubDate>Sun, 01 Jan 2017 20:00:00 +0000</pubDate>
      
      <guid>/2017/01/01/user-stories-for-web-operations/</guid>
      <description>

&lt;p&gt;&lt;em&gt;This post was &lt;a href=&#34;https://github.com/alphagov/government-service-design-manual/blob/master/service-manual/operations/web-operations-stories.md&#34;&gt;originally written&lt;/a&gt;
as part of the Government Service Design Manual while I was working for the UK
Cabinet Office in 2013. I&amp;rsquo;m republishing it here under the terms of the &lt;a href=&#34;http://www.nationalarchives.gov.uk/doc/open-government-licence/version/2/&#34;&gt;Open
Government licence&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;This document outlines the typical scope of infrastructure and web operations
(sometimes erroneously referred to as hosting) work on a large service
redesign project.&lt;/p&gt;

&lt;p&gt;The sample list of user stories provided is not intended to be a complete list of
all areas of interest nor are you likely to need to do all of this for every service.
The idea is for this list to be a good starting place from where to you can write
additional stories, delete ones you do not require and split stories into smaller
ones. Importantly you also need to provide your own acceptance criteria
specific to the needs of your service.&lt;/p&gt;

&lt;p&gt;Remember these stories are a placeholder for a conversation.
For some contexts, that conversation will be &amp;lsquo;this does not apply to my
service&amp;rsquo; &amp;ndash; that is fine. But there will almost certainly be other stories not
listed here which do apply.&lt;/p&gt;

&lt;h2 id=&#34;the-problem&#34;&gt;The problem&lt;/h2&gt;

&lt;p&gt;An issue we have observed on a number of projects is a lack of understanding
early on in a project about the work required to run a large online
service. Often this is placed under  &lt;em&gt;hosting&lt;/em&gt; and is investigated too late
in the process.&lt;/p&gt;

&lt;h2 id=&#34;intended-audience&#34;&gt;Intended audience&lt;/h2&gt;

&lt;p&gt;The hosting of a complex and sensitive software application requires a team
of people with specialist skills to design, setup and operate. Because this
work is generally not user facing and can be highly technical it is sometimes
easy to leave until later &amp;ndash; with potentially dire consequences for launching
safely and on time.&lt;/p&gt;

&lt;h3 id=&#34;service-managers&#34;&gt;Service managers&lt;/h3&gt;

&lt;p&gt;Does your team have people who deeply understand this topic? If you are not an
expert then it is important to involve people permanently in the team
who are. They can explain the technical trade offs and decisions which may
affect your service.&lt;/p&gt;

&lt;h3 id=&#34;delivery-managers&#34;&gt;Delivery managers&lt;/h3&gt;

&lt;p&gt;As well as understanding the potentially large scope of work, many of the areas
discussed here have lead times associated with third parties. The earlier
stories related to these topics are brought into project backlogs the sooner
estimates can be made and deadlines understood.&lt;/p&gt;

&lt;h2 id=&#34;stories&#34;&gt;Stories&lt;/h2&gt;

&lt;p&gt;The following stories are intended to provide a starting point for any project,
rather than be a complete set. Individual projects would be expected to take
and modify stories as needed and importantly to apply their own acceptance
criteria specific to their requirements.&lt;/p&gt;

&lt;p&gt;The majority of these stories are from the point of view of developers, web
operations engineers and the responsible service manager. Although not ideal,
for this particular technical topic this works reasonably well. Feel free
to change the focus when using them in your backlog.&lt;/p&gt;

&lt;h3 id=&#34;process&#34;&gt;Process&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Development process&lt;/em&gt;&lt;br /&gt;
As a developer working on the service&lt;br /&gt;
So that we can ensure a high level of quality&lt;br /&gt;
And so we can maximise the integrity of the source code&lt;br /&gt;
I want a well documented and understood development process&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Out-of-hours support&lt;/em&gt;&lt;br /&gt;
As the service manager responsible for the service&lt;br /&gt;
So that we can ensure a suitable level of availability and integrity&lt;br /&gt;
I want to understand the requirement for Out-of-hours support&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Disaster recovery&lt;/em&gt;&lt;br /&gt;
As the service manager responsible for the service&lt;br /&gt;
So that in the event of a disaster everyone doesn&amp;rsquo;t panic and make things up&lt;br /&gt;
I want a clear disaster recovery plan in place to deal with different types of catastrophic event&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Release process&lt;/em&gt;&lt;br /&gt;
As the service manager responsible for the service&lt;br /&gt;
So that the service can be changed on a very frequent basis&lt;br /&gt;
And so that changes do not cause problems for users&lt;br /&gt;
I want a well documented and understood release process&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Security response&lt;/em&gt;&lt;br /&gt;
As the service manager responsible for the service&lt;br /&gt;
So that security incidents are handled with extra care&lt;br /&gt;
And so that the service meets its wider Government obligation to GovCert&lt;br /&gt;
I want a well documented and understood security incident process&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Helpdesk&lt;/em&gt;&lt;br /&gt;
As the service manager responsible for the service&lt;br /&gt;
So that communication with users is done in a joined up way&lt;br /&gt;
I want a central helpdesk function to deal with events, incidents and requests&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Request Management&lt;/em&gt;&lt;br /&gt;
As the service manager responsible for the service&lt;br /&gt;
So that questions from users can be dealt with efficiently&lt;br /&gt;
I want a clear information request management policy&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Event Management&lt;/em&gt;&lt;br /&gt;
As the service manager responsible for the service&lt;br /&gt;
So that likely events that could affect the running of the service can be dealt with smoothly&lt;br /&gt;
I want a clear event management policy&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Incident Management&lt;/em&gt;&lt;br /&gt;
As the service manager responsible for the service&lt;br /&gt;
So that problems that arise with that service can be dealt with efficiently&lt;br /&gt;
I want a clear incident management policy&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Operations manual&lt;/em&gt;&lt;br /&gt;
As the service manager responsible for the service&lt;br /&gt;
So that information about the running of the service is not kept in individuals’ heads&lt;br /&gt;
And so information is readily available to people running the service&lt;br /&gt;
I want a single place to store content for a service operations manual&lt;/p&gt;

&lt;h3 id=&#34;shared-service&#34;&gt;Shared service&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Source code hosting&lt;/em&gt;&lt;br /&gt;
As a developer working on the service&lt;br /&gt;
So we have somewhere to securely store our source code&lt;br /&gt;
I want access to a central source code hosting service or repository&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Continuous Integration&lt;/em&gt;&lt;br /&gt;
As a developer working on the service&lt;br /&gt;
So we can ensure a high level of quality in the code&lt;br /&gt;
And so we can minimise the time needed for regression testings&lt;br /&gt;
I want a Continuous Integration environment which automatically runs tests against every commit&lt;/p&gt;

&lt;p&gt;&lt;em&gt;External DNS&lt;/em&gt;&lt;br /&gt;
As a web operations engineer&lt;br /&gt;
So that visitors to the service don&amp;rsquo;t need to remember an IP address that will change&lt;br /&gt;
I want a process and supplier relationship to manage external DNS addresses&lt;/p&gt;

&lt;h3 id=&#34;policy&#34;&gt;Policy&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Sensitivity of source code&lt;/em&gt;&lt;br /&gt;
As a developer working on the service&lt;br /&gt;
So that I understand the controls that need to be in place&lt;br /&gt;
And so that I know who and how I may share it&lt;br /&gt;
I want a clear policy around the sensitivity of source code&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Third party code&lt;/em&gt;&lt;br /&gt;
As a developer working on the service&lt;br /&gt;
I want a clear policy around use of third party source code libraries&lt;br /&gt;
So that I do not introduce unknown security problems&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Change evaluation&lt;/em&gt;&lt;br /&gt;
As the service manager responsible for the service&lt;br /&gt;
So that I can release changes to production quickly&lt;br /&gt;
And so that we can meet our obligation to the Digital by Default Service Standard&lt;br /&gt;
I want a documented process for evaluating and deciding on a change to the production service&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Access control&lt;/em&gt;&lt;br /&gt;
As the service manager responsible for the service&lt;br /&gt;
So that the confidentiality, integrity and availability of the service isn&amp;rsquo;t compromised&lt;br /&gt;
And so that suitable technical controls can be put in place to enforce it&lt;br /&gt;
I want a clear policy on who has access to what on the production system&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Separation of duties&lt;/em&gt;&lt;br /&gt;
As the service manager responsible for the service&lt;br /&gt;
So that we can ensure the service has enough people in the right roles&lt;br /&gt;
I want to understand any required separation of duties (whether driven by legislation or security concerns)&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Clearances&lt;/em&gt;&lt;br /&gt;
As the service manager responsible for the service&lt;br /&gt;
So that security clearances can be arranged early in the project to avoid access restrictions later on&lt;br /&gt;
I want to know what level of clearances are required for different roles (including third parties)&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Releasing open source&lt;/em&gt;&lt;br /&gt;
As a developer working on the service&lt;br /&gt;
So that I do not introduce unknown security problems&lt;br /&gt;
And so that we can meet our obligation to the Digital by Default Service Standard&lt;br /&gt;
I want a clear policy around releasing code as open source&lt;/p&gt;

&lt;h3 id=&#34;design&#34;&gt;Design&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Government networks&lt;/em&gt;&lt;br /&gt;
As a technical architect&lt;br /&gt;
So that the right suppliers are contracted&lt;br /&gt;
And so that long lead times are factored into the project plan early&lt;br /&gt;
I want to know whether the service requires access to a Government network like the PSN or GSI&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Multiple infrastructure providers&lt;/em&gt;&lt;br /&gt;
As the service manager for this service&lt;br /&gt;
So that I understand the intended availability constraints&lt;br /&gt;
I want to know whether multiple suppliers of Infrastructure are required&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Capacity planning&lt;/em&gt;&lt;br /&gt;
As a web operations engineer&lt;br /&gt;
So that we can estimate the number and size of infrastructure components (instances, firewalls, load balancers etc.)&lt;br /&gt;
And so that resource based costs can be estimated&lt;br /&gt;
I want to carry out some capacity planning activities&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Network architecture&lt;/em&gt;&lt;br /&gt;
As a technical architect&lt;br /&gt;
So that I can build out a production environment to an agreed specification&lt;br /&gt;
I want a network architecture design&lt;/p&gt;

&lt;h3 id=&#34;components&#34;&gt;Components&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Web servers&lt;/em&gt;&lt;br /&gt;
As a web operations engineer working on the service&lt;br /&gt;
So that we can serve HTTP request&lt;br /&gt;
And so we can proxy requests to application servers&lt;br /&gt;
I want to install and configure a web server&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Databases&lt;/em&gt;&lt;br /&gt;
As a web operations engineer working on the service&lt;br /&gt;
So that data can be stored in a manner befitting its structure&lt;br /&gt;
And so the stored data can be queried as quickly as required&lt;br /&gt;
I want to install and configure a suitable database server&lt;/p&gt;

&lt;p&gt;As a web operations engineer working on the service&lt;br /&gt;
So that data can still be read even during a failure of a single database server&lt;br /&gt;
I want to configure some failover or other redundancy mechanism for the database&lt;/p&gt;

&lt;p&gt;As a web operations engineer working on the service&lt;br /&gt;
So that data can still be written even during a failure of a single database server&lt;br /&gt;
I want to configure some failover or other redundancy mechanism for the database&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Load balancers&lt;/em&gt;&lt;br /&gt;
As a web operations engineer working on the service&lt;br /&gt;
So that web requests can still be served even with the failure of one or more web servers&lt;br /&gt;
I want to install and/or configure a load balancer&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Internal DNS&lt;/em&gt;&lt;br /&gt;
As a web operations engineer working on the service&lt;br /&gt;
So that we can easily address our services and instances&lt;br /&gt;
I want to install and/or configure a mechanism to manage internal DNS&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Database backups&lt;/em&gt;&lt;br /&gt;
As the service manager for the service&lt;br /&gt;
So that we can recover from a large failure of our database infrastructure&lt;br /&gt;
I want regular automated backups to be taken of the data stored in the database&lt;/p&gt;

&lt;p&gt;As the service manager for the service&lt;br /&gt;
So that we can recover from a large failure of a single suppliers infrastructure&lt;br /&gt;
I want regular automated backups to be stored off site&lt;/p&gt;

&lt;p&gt;&lt;em&gt;HTTP cache&lt;/em&gt;&lt;br /&gt;
As a web operations engineer working on the service&lt;br /&gt;
So that the service remains fast when serving identical content&lt;br /&gt;
And so load is minimised on the application servers&lt;br /&gt;
I want to install an HTTP cache&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Email gateway&lt;/em&gt;&lt;br /&gt;
As a developer working on the service&lt;br /&gt;
So that the service can send email to administrators or end users&lt;br /&gt;
I want to setup and configure a suitable email gateway&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Application servers&lt;/em&gt;&lt;br /&gt;
As a developer working on the service&lt;br /&gt;
So that the code I write can be run on server instances&lt;br /&gt;
I want to install and configure a suitable application server&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Internal package repository&lt;/em&gt;&lt;br /&gt;
As a web operations engineer working on the service&lt;br /&gt;
So that we can use software not available in our operating system repositories&lt;br /&gt;
And so that we can use the security, dependency management and versioning features&lt;br /&gt;
I want to install and configure an internal package repository&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Artifact repository&lt;/em&gt;&lt;br /&gt;
As a developer working on the service&lt;br /&gt;
So that we can share and version individual code components that need it&lt;br /&gt;
I want to install and configure an artifact repository&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Message queue&lt;/em&gt;&lt;br /&gt;
As a developer working on the service&lt;br /&gt;
So that I can easily and efficiently process work asynchronously&lt;br /&gt;
I want to install and configure a suitable message queue or work queue system&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Search server&lt;/em&gt;&lt;br /&gt;
As a developer working on the service&lt;br /&gt;
So that I can quickly and efficiently search through large amounts of data&lt;br /&gt;
I want to install and configure a suitable search engine&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Object cache&lt;/em&gt;&lt;br /&gt;
As a developer working on the service&lt;br /&gt;
So that I can minimise the number of queries to the database&lt;br /&gt;
And so that I can keep the service fast and responsive to users&lt;br /&gt;
I want to install and configure a object caching system&lt;/p&gt;

&lt;h3 id=&#34;monitoring&#34;&gt;Monitoring&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Metric collection service&lt;/em&gt;&lt;br /&gt;
As a web operations engineer working on the service&lt;br /&gt;
So that we can collect large numbers of time series metrics from the running service&lt;br /&gt;
I want to install and configure a metric collection system&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Application running monitoring checks&lt;/em&gt;&lt;br /&gt;
As a web operations engineer working on the service&lt;br /&gt;
So that we can run checks against metrics from the metrics system&lt;br /&gt;
And so that we can run active checks based on arbitrary code&lt;br /&gt;
I want to install and configure a monitoring system&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Smoke tests&lt;/em&gt;&lt;br /&gt;
As a developer working on the service&lt;br /&gt;
So that I know that I haven’t broken anything when deploying my application&lt;br /&gt;
I want a series of smoke tests to be run after all deployments&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Application metrics&lt;/em&gt;&lt;br /&gt;
As a developer working on the service&lt;br /&gt;
So that I can gain visibility of how my application is running in production&lt;br /&gt;
And so we can find and fix problems with it quickly&lt;br /&gt;
I want a simple way of instrumenting my application to feed metrics to the metrics system&lt;/p&gt;

&lt;p&gt;&lt;em&gt;System metrics&lt;/em&gt;&lt;br /&gt;
As a web operations engineer working on the service&lt;br /&gt;
So that we can identify and fix problems with the system, ideally before they occur&lt;br /&gt;
I want to set up collection of low level system metrics like load, disk, network io, etc.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Security monitoring&lt;/em&gt;&lt;br /&gt;
As a web operations engineer working on the service&lt;br /&gt;
So that we notice quickly and are alerted to any incidents with a security flavour&lt;br /&gt;
I want to configure suitable security monitoring tools&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Notifications&lt;/em&gt;&lt;br /&gt;
As a web operations engineer or developer supporting the service&lt;br /&gt;
So that I know about any issues as they happen&lt;br /&gt;
I want to set up suitable notifications from the monitoring system&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Transactional monitoring&lt;/em&gt;&lt;br /&gt;
As a developer working on a transactional service&lt;br /&gt;
So that we can block fraudulent or otherwise suspect transactions&lt;br /&gt;
I want to install and configure a transactional monitoring system with suitable rules&lt;/p&gt;

&lt;p&gt;&lt;em&gt;External monitoring&lt;/em&gt;&lt;br /&gt;
As the service manager for the service&lt;br /&gt;
So that in the event of a failure of the monitoring system&lt;br /&gt;
And so that the service is monitoring from outside our local network&lt;br /&gt;
I want an external monitoring capability with basic checks to monitoring service uptime&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Monitoring data feed from infrastructure provider&lt;/em&gt;&lt;br /&gt;
As a web operations engineer working on the service&lt;br /&gt;
So that I am aware of problems in the hypervisor, physical or network infrastructure&lt;br /&gt;
I want a feed of monitoring data from the Infrastructure supplier&lt;/p&gt;

&lt;h3 id=&#34;logging&#34;&gt;Logging&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Log collection&lt;/em&gt;&lt;br /&gt;
As a web operations engineer working on the service&lt;br /&gt;
So that I can easily see everything that is happening in specific applications&lt;br /&gt;
I want to collect all the logs from applications running on the same host in one place&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Log aggregation&lt;/em&gt;&lt;br /&gt;
As a web operations engineer working on the service&lt;br /&gt;
So that I don&amp;rsquo;t have to go to an individual machine to view its logs&lt;br /&gt;
I want all logs from all machines to be aggregated together&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Log storage&lt;/em&gt;&lt;br /&gt;
As a web operations engineer working on the service&lt;br /&gt;
So that logs can be kept for a suitable period of time&lt;br /&gt;
I want to provision enough storage for log archiving&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Log viewing&lt;/em&gt;&lt;br /&gt;
As a web operations engineer working on the service&lt;br /&gt;
So that I can see what is happening across the infrastructure&lt;br /&gt;
I want a mechanism for viewing and searching logs in as near real time as possible&lt;/p&gt;

&lt;p&gt;As a developer working on the service&lt;br /&gt;
So that I can extract information from logs to aid with improving the service&lt;br /&gt;
I want a mechanism to run queries across the aggregated logs&lt;/p&gt;

&lt;h3 id=&#34;configuration-management&#34;&gt;Configuration management&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Configuration management client&lt;/em&gt;&lt;br /&gt;
As a web operations engineer working on the service&lt;br /&gt;
So that changes to server configuration can be made safely and quickly&lt;br /&gt;
I want to install software to manage configuration management&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Configuration management database&lt;/em&gt;&lt;br /&gt;
As a web operations engineer working on the service&lt;br /&gt;
So that configuration changes are tracked over time&lt;br /&gt;
And so that current state of available to query&lt;br /&gt;
I want to install software to manage a configuration management database&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Configuration management server&lt;/em&gt;&lt;br /&gt;
As a web operations engineer working on the service&lt;br /&gt;
So that all nodes do not have all configuration information&lt;br /&gt;
I want to install software to allow centralised management of Configuration management code&lt;/p&gt;

&lt;h3 id=&#34;deployment&#34;&gt;Deployment&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Configuration management code deployment mechanism&lt;/em&gt;&lt;br /&gt;
As a web operations engineer working on the service&lt;br /&gt;
So that configuration changes can be made safely and in an auditable manner&lt;br /&gt;
I want a deployment process and tooling for configuration management code&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Application deployment mechanism&lt;/em&gt;&lt;br /&gt;
As a developer working on the service&lt;br /&gt;
So that changes to applications can be made available to users&lt;br /&gt;
And so that changes are made in a safe and auditable manner&lt;br /&gt;
I want a deployment process and tooling for application code&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Release tracking&lt;/em&gt;&lt;br /&gt;
As the service manager for the service&lt;br /&gt;
So that we have an auditable log of what was changed when by whom&lt;br /&gt;
I want an up-to-date list of releases to be maintained&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Packaging&lt;/em&gt;&lt;br /&gt;
As a web operations engineer working on the service&lt;br /&gt;
So that we don’t have to compile customised applications from source before using them&lt;br /&gt;
And so we can take advantage of dependency and version management capabilities of the OS&lt;br /&gt;
I want a process and tooling for creating our own system packages&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Orchestration&lt;/em&gt;&lt;br /&gt;
As a web operations engineer working on the service&lt;br /&gt;
So that I can run commands across multiple instances quickly&lt;br /&gt;
I want tooling in place which allows some orchestration based on the current instances&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Database migrations&lt;/em&gt;&lt;br /&gt;
As a web operations engineer working on the service&lt;br /&gt;
So that I can have confidence that database migration scripts will work when applied to production&lt;br /&gt;
I want database migrations to be deployed through the same sequence of environments as code changes&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Management of secrets&lt;/em&gt;&lt;br /&gt;
As a web operations engineer working on the service&lt;br /&gt;
So that I can ensure confidential communication between particular parts of the system&lt;br /&gt;
I want a process or tool for managing secrets such as keys and passwords&lt;/p&gt;

&lt;h3 id=&#34;access-control&#34;&gt;Access control&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;End user devices&lt;/em&gt;&lt;br /&gt;
As the service manager responsible for the service&lt;br /&gt;
So that management access to the infrastructure can be locked down to prevent unauthorised access&lt;br /&gt;
I want to know what kind of protection the management end user devices require&lt;/p&gt;

&lt;p&gt;&lt;em&gt;User directory&lt;/em&gt;&lt;br /&gt;
As a web operations engineer&lt;br /&gt;
So that we do not have to maintain multiple lists of privileged users&lt;br /&gt;
And so that users can be added and removed once in a central fashion&lt;br /&gt;
I want to install and configure something to provide a single user directory&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Key based authentication&lt;/em&gt;&lt;br /&gt;
As a web operations engineer&lt;br /&gt;
So that we are not vulnerable to password based login attempts to individual servers&lt;br /&gt;
I want to set-up public key based authentication&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Single sign-on&lt;/em&gt;&lt;br /&gt;
As a web operations engineer&lt;br /&gt;
So that any third party web interfaces we use can be accessed via a single login&lt;br /&gt;
I want to install and configure a single sign-on systems&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Network/VPN configuration&lt;/em&gt;&lt;br /&gt;
As a web operations engineer&lt;br /&gt;
So that management functions can not be accessed via the public internet&lt;br /&gt;
And so that we reduce the surface area for attack&lt;br /&gt;
I want to restrict management access to a VPN and/or non-public restricted network&lt;/p&gt;

&lt;h3 id=&#34;provisioning&#34;&gt;Provisioning&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Other environments&lt;/em&gt;&lt;br /&gt;
As the service manage for the service&lt;br /&gt;
So that I can see the very latest working version of the service at any time&lt;br /&gt;
And so I can share that with people in and outside the team&lt;br /&gt;
I want a preview environment to be provisioned which is similar to production&lt;/p&gt;

&lt;p&gt;As a web operations engineer working on the service&lt;br /&gt;
So that the we have a clean environment in which to test production deployments&lt;br /&gt;
And so that we have a secure environment to test with production-like data&lt;br /&gt;
I want to provision a staging environment which mimics production as closely as possible&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Production environment&lt;/em&gt;&lt;br /&gt;
As a web operations engineer working on the service&lt;br /&gt;
So that the service can launch to the public&lt;br /&gt;
I want to provision a production environment&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Base image(s)&lt;/em&gt;&lt;br /&gt;
As a web operations engineer working on the service&lt;br /&gt;
So that all server instances start out with sensible security settings&lt;br /&gt;
I want to create a base image running the chosen operating system with hardened configuration&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Public network interfaces&lt;/em&gt;&lt;br /&gt;
As a web operations engineer working on the service&lt;br /&gt;
So that the application only receives wanted traffic from the internet&lt;br /&gt;
And so that we don’t accidentally expose sensitive or insecure components of the system&lt;br /&gt;
I want to configure and test the public network interfaces for the system&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Private network configuration&lt;/em&gt;&lt;br /&gt;
As a web operations engineer working on the service&lt;br /&gt;
So that individual internal components can only talk with known parts of the system&lt;br /&gt;
And so we limit the extent of any security breach&lt;br /&gt;
I want to configure and test the private network interfaces for the system&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Network codes of connection&lt;/em&gt;&lt;br /&gt;
As a web operations engineer working on the service&lt;br /&gt;
Given I need to communicate with a system only available on a Government network&lt;br /&gt;
So that the two systems can talk with each other&lt;br /&gt;
I want to meet the code of connection requirements and configure access to the network&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Management network&lt;/em&gt;&lt;br /&gt;
As a web operations engineer working on the service&lt;br /&gt;
So that network traffic used to manage the infrastructure is separate from public traffic&lt;br /&gt;
And so we can monitor irregularities in network traffic separately&lt;br /&gt;
I want to configure a separate management network&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Platform load balancers&lt;/em&gt;&lt;br /&gt;
As a web operations engineer working on the service&lt;br /&gt;
So that we can reduce the number of single points of failure&lt;br /&gt;
And so that we can scale out to deal with a large amount of traffic&lt;br /&gt;
I want to provision load balancers to distribute traffic between multiple instances&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Platform firewalls&lt;/em&gt;&lt;br /&gt;
As a web operations engineer working on the service&lt;br /&gt;
So that unwanted traffic can be filtered before it enters our virtual infrastructure&lt;br /&gt;
I want to configure the external facing IaaS firewalls to only allow certain traffic&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Dynamic environments&lt;/em&gt;&lt;br /&gt;
As a web operations engineer working on the service&lt;br /&gt;
So that we are not constrained by a fixed number of environments&lt;br /&gt;
And so we can easy run full stack tests or experiments&lt;br /&gt;
I want to be able to easily provision an environment running the full service&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Elastic scaling&lt;/em&gt;&lt;br /&gt;
As a web operations engineer working on the service&lt;br /&gt;
So that the service can automatically deal with unexpected increases in traffic&lt;br /&gt;
I want to configure tooling to automatically scale the number of instances based on load&lt;/p&gt;

&lt;h3 id=&#34;security-controls&#34;&gt;Security controls&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Operating system hardening&lt;/em&gt;&lt;br /&gt;
As a web operations engineer&lt;br /&gt;
So that we are making use of built-in operating system security controls&lt;br /&gt;
I want to automate a default set of hardening rules for our chosen operating system&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Malware detection&lt;/em&gt;&lt;br /&gt;
As a web operations engineer&lt;br /&gt;
So that instances which may be compromised can be dealt with quickly&lt;br /&gt;
I want to automate the detection of potential malware&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Intrusion detection&lt;/em&gt;&lt;br /&gt;
As a web operations engineer&lt;br /&gt;
So that instances which are being attacked or probed can defend themselves&lt;br /&gt;
I want to configure an intrusion detection and prevention system&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Virus scanning&lt;/em&gt;&lt;br /&gt;
As a web operations engineer&lt;br /&gt;
So we can be sure that files in the system don&amp;rsquo;t have viruses&lt;br /&gt;
I want to install virus scanning for files passing a network boundary&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Host firewalls&lt;/em&gt;&lt;br /&gt;
As a web operations engineer&lt;br /&gt;
So that the surface area for attack is limited&lt;br /&gt;
And so that services which should only be available locally aren&amp;rsquo;t exposed on the internet&lt;br /&gt;
I want to install and configure a local firewall&lt;/p&gt;

&lt;p&gt;&lt;em&gt;On instance event auditing&lt;/em&gt;&lt;br /&gt;
As a web operations engineer&lt;br /&gt;
So that I know when things like logins or other sensitive events happen on instances&lt;br /&gt;
I want to set-up some auditing of events&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Rate/connection limiting&lt;/em&gt;&lt;br /&gt;
As a web operations engineer&lt;br /&gt;
So that large spikes in traffic from a single source don&amp;rsquo;t overwhelm application&lt;br /&gt;
I want to configure some level of rate and connection limiting for web requests&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Secure storage of key material&lt;/em&gt;&lt;br /&gt;
As a web operations engineer&lt;br /&gt;
So that any highly sensitive cryptographic keys are not lost, resulting in a compromise&lt;br /&gt;
I want to have a mechanism in place to securely store key material&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Third party DDoS protection&lt;/em&gt;&lt;br /&gt;
As a web operations engineer&lt;br /&gt;
So that a the site does not go down under a denial of service attack&lt;br /&gt;
I want to purchase and/or configure a level of DDoS protection&lt;/p&gt;

&lt;h3 id=&#34;testing&#34;&gt;Testing&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Performance testing&lt;/em&gt;&lt;br /&gt;
As the service manager responsible for the service&lt;br /&gt;
So that we know the service will be fast and responsive under realistic traffic&lt;br /&gt;
I want to be able to run a comprehensive performance test suite against the service&lt;/p&gt;

&lt;p&gt;&lt;em&gt;As a developer working on the service&lt;/em&gt;&lt;br /&gt;
So that we know changes to the code do not negatively affect performance&lt;br /&gt;
I want the performance test suite to run as part of the continuous integration system&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Load testing&lt;/em&gt;&lt;br /&gt;
As the service manager responsible for the service&lt;br /&gt;
So that we know the service will still be working under larger amounts of traffic than are expected&lt;br /&gt;
I want to be able to run a comprehensive load test suite against the service&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Application penetration testing&lt;/em&gt;&lt;br /&gt;
As the service manager responsible for the service&lt;br /&gt;
So that the service does not get compromised due to a vulnerability&lt;br /&gt;
And so we meet our accreditation obligations&lt;br /&gt;
I want to run a suitable number of penetration tests against the applications under development&lt;/p&gt;

&lt;p&gt;&lt;em&gt;As the service manager responsible for the service&lt;/em&gt;&lt;br /&gt;
So that the service does not get compromised due to a vulnerability&lt;br /&gt;
And so we meet our accreditation obligations&lt;br /&gt;
I want to run a suitable number of penetration tests against third party installed applications used as part of the service&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Infrastructure penetration testing&lt;/em&gt;&lt;br /&gt;
As the service manager responsible for the service&lt;br /&gt;
So that the service does not get compromised due to a vulnerability&lt;br /&gt;
And so we meet our accreditation obligations&lt;br /&gt;
I want to run a suitable number of penetration tests against the infrastructure configuration&lt;/p&gt;

&lt;h3 id=&#34;operating-system&#34;&gt;Operating system&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;Operation system selection&lt;/em&gt;&lt;br /&gt;
As a web operations engineer working on the service&lt;br /&gt;
So that we have a clear path to receiving security updates&lt;br /&gt;
And so we can more easily find support for our systems&lt;br /&gt;
I want to select and install a suitable default operating system for the service&lt;/p&gt;

&lt;p&gt;&lt;em&gt;File systems&lt;/em&gt;&lt;br /&gt;
As a web operations engineer working on the service&lt;br /&gt;
So that we get the best possible performance and reliability from the disk&lt;br /&gt;
I want to select a suitable file system and partition layout&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Resource isolation&lt;/em&gt;&lt;br /&gt;
As a web operations engineer working on the service&lt;br /&gt;
So that noisy applications cannot affect other applications on the instance&lt;br /&gt;
I want to be able to isolate running applications from each other in terms of memory and CPU&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Read-only file systems&lt;/em&gt;&lt;br /&gt;
As a web operations engineer working on the service&lt;br /&gt;
So that I can protect against files being changed due to compromises in the application&lt;br /&gt;
I want to be able to configure a read-only file system if appropriate.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Working for a software vendor</title>
      <link>/2016/12/31/working-for-a-software-vendor/</link>
      <pubDate>Sat, 31 Dec 2016 14:37:50 +0000</pubDate>
      
      <guid>/2016/12/31/working-for-a-software-vendor/</guid>
      <description>

&lt;p&gt;One of the reasons I moved to Puppet two and a bit years ago was because
I was interested in the software industry. In particular I was
interested in being on the vendor side for a while. My background is
mainly as a service provider, software as a service, in-house
developer/ops type person. This has definitely been an interesting
experience, but I&amp;rsquo;ve not tried too much to explain &lt;em&gt;why&lt;/em&gt;, until now.&lt;/p&gt;

&lt;p&gt;First, what do we mean by &lt;em&gt;vendor&lt;/em&gt;?&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;a person or company offering something for sale, especially a trader
in the street.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So in the context of a software vendor we specifically mean:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;a person or company offering software for sale&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Note that we&amp;rsquo;re selling the software, not access to some service
provided by software (ie. SaaS). SaaS and other as-a-service models are
growing part of the industry, but the business model, development cycle,
company structure and other aspects are quite different in my experience,
though lots of hybrid models exist too.&lt;/p&gt;

&lt;h2 id=&#34;economics-and-scale&#34;&gt;Economics and scale&lt;/h2&gt;

&lt;p&gt;One of the interesting aspects of the software vendor world is the
economics, the revenues, and the fact lots of companies are public. This
in turn means a large amount of VC money goes into trying to create
another large software vendor, because the potential payout is huge.&lt;/p&gt;

&lt;p&gt;Take a sample set of companies from the last 10 years or so that are still
private: Docker, Puppet, Chef, MongoDB, Elastic, CoreOS, Mesosphere,
Weave, Cloudera, etc. Somewhat biased towards my own interests I&amp;rsquo;ll
admit.&lt;/p&gt;

&lt;p&gt;Now take a sample of large, public, software vendors: Oracle, Microsoft,
CA, SAP, Sage, BMC, VMware. Not counting companies like Intel,
Cisco, IBM, Dell (no longer public), and HP with huge software portfolios.&lt;/p&gt;

&lt;p&gt;Let&amp;rsquo;s pick on Sage, a UK software company selling accounting software.
&lt;a href=&#34;http://www.truffle100.com/2015/ranking.php&#34;&gt;As of 2014&lt;/a&gt; Sage had 1169
people in software development R&amp;amp;D roles and they made $1.6billion from
software and related services in 2015. That&amp;rsquo;s probably about the (order
of magnitude) number of people employed in R&amp;amp;D roles in the above private
softare companies. The revenue is (and I&amp;rsquo;m guessing here) a bit higher
at Sage than those companies combined too. SAP is an order of magnitude larger,
both in terms of people (18908 in 2014) and revenues ($18billion
also in 2014). Oracle revenues were $38billion as another data point.&lt;/p&gt;

&lt;p&gt;So all the cool (or not so cool) companies from the past 10 years or so
are a rounding error to the size of the industry. But you wouldn&amp;rsquo;t know
that from reading Hacker News or other parts of the internet. This
disconnect is a constant source of interest to me as I spend time with
Puppet customers and with the wider infrastructure community at
conferences and the like.&lt;/p&gt;

&lt;h2 id=&#34;a-world-of-difference&#34;&gt;A world of difference&lt;/h2&gt;

&lt;p&gt;My gut feeling is that most people working as software developers,
designers, product managers, etc. don&amp;rsquo;t work for software vendors. Apart
from maybe in localised areas like Silicon Valley. But because of the
mentioned money and scale (and PR spend) of the big players a
great deal of press interest centers around vendors. Docker is probably the
best current example of this but it&amp;rsquo;s more general than one company.
This makes what happens in software-vendor-startup-land more visible to
everyone else than, say, IT reality in large financial companies.&lt;/p&gt;

&lt;p&gt;At the heart of a good software company is a product being
built and maintained by a team of engineers, designers, managers, etc.
In many ways this is similar to lots of peoples experience of building
software (whether at work or at home as part of one open source project
or another). But the support surrounding this tends to vary greatly from
other areas. A dedicated marketing and product marketing team, dedicated
sales staff, a professional services function, training, documentation,
public relations personell are all required to turn the software into
revenue. And importantly these teams have to work closely together, and
be actively involved with the development of the product.&lt;/p&gt;

&lt;p&gt;This is very different from an in-house development position, but it&amp;rsquo;s
also quite different from most SaaS operations. SaaS tends (generalising
here) to be based around large numbers of individual users with monthly
recurring revenues of 10s or 100s of US dollars. Software vendors
selling to large enterprises tends to be looking at single large deals
of 10s of thousands to many millions of dollars. This tends to mean
large differences in total number of customers, revenue per
customer, time needed to close a deal, requirement for staff local to a
customer, etc. All of that makes for a very different operation and
feedback cycle.&lt;/p&gt;

&lt;h2 id=&#34;some-interesting-observations&#34;&gt;Some interesting observations&lt;/h2&gt;

&lt;p&gt;Software has a much longer shelf-life in the real-world than people
typically think on the internet. Take the datacenter automation
market. &lt;a href=&#34;https://www.vmware.com/content/dam/digitalmarketing/vmware/en/pdf/products/vrealize-suite/vmware-idc-worlwide-datacenter-automation-software-market-shares-2015.pdf&#34;&gt;This IDC
report&lt;/a&gt;
for example pegs the market at $2.3billion in 2015. VMware takes the
lions share with roughly 30%, with BMC with 10%. For reference Puppet
has 3.2% and Chef 1.2%. Obviously this is just one report, and it&amp;rsquo;s now
a year old, but it&amp;rsquo;s an interesting data point. And compare that to what
you might expect if you just follow the software rather than the market.
Even in 2015 some people would have been saying &amp;ldquo;surely everything is
Docker and Kubernetes now?&amp;ldquo;. The reality is closer to it being all shell
scripts and BladeLogic for the majority of IT shops.&lt;/p&gt;

&lt;p&gt;For the most part, innovators (and some early adopters) don&amp;rsquo;t buy software,
instead they build or co-opt it. Take Netflix, Uber, Amazon, Google,
Facebook or similar. All are well-known for building much of there core
software and infrastructure and using open source solutions for much of
the rest. And it&amp;rsquo;s not just software, all of the above also have large
internal investments in bespoke hardware as well. So who buys software
from software vendors? Taking the &lt;a href=&#34;http://www.valuebasedmanagement.net/methods_rogers_innovation_adoption_curve.html&#34;&gt;Rogers&amp;rsquo; Innovation Adoption
Curve&lt;/a&gt;
it&amp;rsquo;s the early majority, the late majority and laggards. That&amp;rsquo;s
~85% of the market. Most of the noise on the internet about software is
from innovators and early adopters, or people who want to be in those
groups. But most of the software sold is to people with very different
wants and needs. This chasm explains much of the frustration experienced
with software, and the difficulty of building software for often very
different types of users at the same time.&lt;/p&gt;

&lt;p&gt;Much of the writing about continuous delivery and continuous deployment
assumes you&amp;rsquo;re releasing a web site or at least a central, single,
service. At the very least this is most peoples experience and context.
But shipping software than people install and run themselves tends to
make software deployment a pull rather than a push. A vendor can release
a new version, but how to make the customer upgrade? Technically this
could be reasonably straightforward (Chrome auto-updates for example)
but for expensive, often critical, systems in sometimes regulated or
otherwise controlled or low trust environments, this turns out to be
trickier and more about people than just technology. This is an entire
topic on it&amp;rsquo;s own so I&amp;rsquo;ll leave it there &lt;a href=&#34;https://web.pipelineconf.info/&#34;&gt;for
now&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Continuous integration for packaged software (true for some, but not most,
projects outside software vendors) tends to hit a permutation explosion quite
quickly. Take server software because that&amp;rsquo;s what I&amp;rsquo;m most familiar
with. You&amp;rsquo;ll definitely support the latest version of RHEL, plus
probably a few older versions, and maybe Centos and some of the other
variants (Oracle Linux, Scientific Linux) as well. Ubuntu LTS releases
probably makes the list, as might Debian stable. You&amp;rsquo;ll also likely want
to test on at least Windows Server 2016 and 2012. You may have need to
keep going and support BSD, AIX, HP-UX, SUSE, etc. &lt;a href=&#34;https://docs.puppet.com/guides/platforms.html&#34;&gt;Puppet has an
unreasonably long list of supported and tested
platforms&lt;/a&gt; for instance.
Throw in other variations or configurations or architectures and you
have a serious CI environment. Compare this to a more typical case of a
deployment pipeline to a single known operating system and version on
a server you control.&lt;/p&gt;

&lt;h2 id=&#34;open-source&#34;&gt;Open source&lt;/h2&gt;

&lt;p&gt;One of the notable things about the lists above of older (public) and
newer (currently private) software companies is that all of the newer
ones are based around an open source software product or products. We&amp;rsquo;ve
had companies based around open source for a long time, but very few make
it to the public markets (where we get data to see if they actually work
as companies). A recent exception is Hortonworks (HDP) which
opened at $26.38 in December 2014 but is down to $8.31 as of this
writing, with revenues around &lt;a href=&#34;http://hortonworks.com/press-releases/hortonworks-reports-financial-results-second-quarter-2016/&#34;&gt;$40million a
quarter&lt;/a&gt;.
Red Hat (RHT) did &lt;a href=&#34;https://investors.redhat.com/news-and-events/press-releases/2016/03-22-2016-201734069&#34;&gt;$2billion in
2016&lt;/a&gt;
(which remember is 5% of Oracles revenues, but still a large amount).&lt;/p&gt;

&lt;p&gt;So undoutedly open source has had a large effect on the software
industry as a whole. But the impact on the public markets to date is
minimal in terms of new companies. It will be super interesting to see
if in 5 years time the list of public software companies based on open
source software is larger than it is today.&lt;/p&gt;

&lt;h2 id=&#34;conclusions&#34;&gt;Conclusions&lt;/h2&gt;

&lt;p&gt;I mainly wrote this post so I had something to reference when I talk to
people about the software industry, and in particular what it&amp;rsquo;s like
working for a software vendor. Speculating about or second guessing one
vendor or another is an internet sport (non-more-so than for those that
work at other vendors) but from the outside it&amp;rsquo;s worth an appreciation
of some of the differences I think and a bit of empathy for the
decisions made. And if the above makes you think this all sounds rather
interesting then you&amp;rsquo;d be right.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The coming of the Kubernetes distributions</title>
      <link>/2016/11/23/the-coming-of-the-kubernetes-distributions/</link>
      <pubDate>Wed, 23 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>/2016/11/23/the-coming-of-the-kubernetes-distributions/</guid>
      <description>

&lt;p&gt;Very few people today start using Linux by downloading the linux kernel
and starting from scratch. Most people start with a Linux distribution;
for instance Debian, Ubuntu or CentOS. These distributions provide some
opinions, some central infrastructure, a brand, strong versioning for
the entire ecosystem and a bunch of other things. I posit that we&amp;rsquo;ll see
the same pattern emerge with Kubernetes.&lt;/p&gt;

&lt;h2 id=&#34;what-even-is-kubernetes&#34;&gt;What even is Kubernetes?&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve seen Kubernetes described as all of the following:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;An operating system for your datacenter&lt;/li&gt;
&lt;li&gt;The distributed systems toolkit&lt;/li&gt;
&lt;li&gt;The Linux kernel for distributed systems&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I think all of these descriptions point to the developers intent that
Kubernetes is something to build upon, rather than a simple out-of-the-box
experience. It&amp;rsquo;s predominantly about building agreement on the
primitives/APIs of distributed systems.&lt;/p&gt;

&lt;h2 id=&#34;a-name-for-a-thing&#34;&gt;A name for a thing&lt;/h2&gt;

&lt;p&gt;I&amp;rsquo;ve not seen much discussion of this in general yet, I think because
it&amp;rsquo;s early days and many of the people looking at Kubernetes today are
either developers or early adopter types. These people have been
&amp;ldquo;downloading the kernel and starting from scratch&amp;rdquo;, even until recently
most likely running from source downloaded directly from GitHub. If the
Kubernetes ecosystem is to grow then that&amp;rsquo;s not how more mainstream IT
will adopt Kubernetes.&lt;/p&gt;

&lt;p&gt;The reason for discussing this now is that I think a name is useful.
That way we can talk about Kubernetes (singular, the software) separate
from distrubutions of Kubernetes (many of them, from different vendors
and communities). I&amp;rsquo;d be happy to see a different name, but I think
distribution probably fits best.&lt;/p&gt;

&lt;h2 id=&#34;any-evidence&#34;&gt;Any evidence?&lt;/h2&gt;

&lt;p&gt;Absolutely. A range of software vendors are providing what I&amp;rsquo;m calling
Kubernetes distributions. Here is a sample, I&amp;rsquo;m sure there are and will
be more. I&amp;rsquo;m also sure over time some will disappear or maintain only a
niche audience.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;OpenShift from Red Hat&lt;/li&gt;
&lt;li&gt;Tectonic from CoreOS&lt;/li&gt;
&lt;li&gt;Kismatic from Apprenda&lt;/li&gt;
&lt;li&gt;Rancher&lt;/li&gt;
&lt;li&gt;Canonical Distribution of Kubernetes&lt;/li&gt;
&lt;li&gt;GKE from Google&lt;/li&gt;
&lt;li&gt;Azure Container Service from Microsoft&lt;/li&gt;
&lt;li&gt;Photon Platform from VMware&lt;/li&gt;
&lt;li&gt;Navops from Univa&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Note that Canonical are already using the term &lt;em&gt;distribution&lt;/em&gt; in the
name. I&amp;rsquo;ve seen it used in passing in CoreOS, OpenShift and Apprenda
press materials too.&lt;/p&gt;

&lt;h2 id=&#34;what-can-we-expect-from-kubernetes-distributions&#34;&gt;What can we expect from Kubernetes distributions?&lt;/h2&gt;

&lt;p&gt;Running with the analogy that Kubernetes is &amp;ldquo;an operating system for
your datacenter&amp;rdquo; and that we&amp;rsquo;ll have a range of competing Kubernetes
distributions, what else can we expect over the next few years?&lt;/p&gt;

&lt;h3 id=&#34;package-repositories-aka-app-stores&#34;&gt;Package repositories (aka. app stores)&lt;/h3&gt;

&lt;p&gt;One of the things provided by the traditional Linux distributions has
been a central package repository. Most of the packages you&amp;rsquo;re
installing from &lt;code&gt;apt&lt;/code&gt; or &lt;code&gt;yum&lt;/code&gt; are coming from that currated set of
available packages. Not to mention community efforts like EPEL. We
already have two package concepts within the Kubernetes ecosystem -
container images (often from Docker Hub today, or from internal
repositories) and Charts, part of the Helm package management tool
(now a CNCF project).&lt;/p&gt;

&lt;p&gt;In the short term expect the shared public Charts repository and Docker
Hub to dominate. But over time different vendors will launch there own
repositories. Partly this will be about building a trusted ecosystem,
partly about limiting permutations for support and testing, and partly
about control. The prize here is to be &amp;ldquo;the enterprise app store&amp;rdquo; and
no vendor in this space isn&amp;rsquo;t going to at least try to own that as part
of their platform.&lt;/p&gt;

&lt;h3 id=&#34;kubernetes-standards-and-compliance&#34;&gt;Kubernetes standards and compliance&lt;/h3&gt;

&lt;p&gt;In an environment with many distributors of core software, it&amp;rsquo;s
common for people to emphasise portability. As vendors extend their
distribution (to provide higher level, but potentially proprietary
features) this can become muddier. Some level of certification is
often the answer. See CloudFoundry or OpenStack for recent examples.
Kubernetes is already part of the CNCF, part of the Linux Foundation.
I&amp;rsquo;d expect to see the works standards and certification eventually
float around, but my guess is not in the short term.&lt;/p&gt;

&lt;h3 id=&#34;a-fight-over-who-is-the-most-open&#34;&gt;A fight over who is the most open&lt;/h3&gt;

&lt;p&gt;Much of the container conversation recently has centered around a
&lt;em&gt;weaponisation&lt;/em&gt; of &lt;em&gt;open&lt;/em&gt;. I think as the different distributions try and
take the community with them at the same time as trying to scale sales this
will continue. This will be an irritation and is probably best avoided.&lt;/p&gt;

&lt;h3 id=&#34;pressure-for-aws-to-offer-kubernetes-as-a-service&#34;&gt;Pressure for AWS to offer Kubernetes as a service&lt;/h3&gt;

&lt;p&gt;I would presume AWS has a very good idea of how many people are actually
using Kubernetes on it&amp;rsquo;s platform. I think as that grows, and as other
vendors efforts mature, they will come under pressure to offer the
Kubernetes API as a service. I&amp;rsquo;m still split on whether that will
actually happen but that&amp;rsquo;s a longer blog post about economics.&lt;/p&gt;

&lt;h3 id=&#34;differentiating-features&#34;&gt;Differentiating features&lt;/h3&gt;

&lt;p&gt;Ultimately vendors will try and differentiate themselves in this new
market. To begin with the majority of business will be targetting the
container-curious and mainly talking up the benefits of containers and
Kubernetes. But some potentialy customers are going to insist on
comparing Kubernetes distributions and winning there is going to be about
clear differentiation. Do you want to be the budget offering or the
provider with the unique selling point?&lt;/p&gt;

&lt;h2 id=&#34;interesting-questions&#34;&gt;Interesting questions&lt;/h2&gt;

&lt;p&gt;An observation at the moment is that all the current Kubernetes
distributions I&amp;rsquo;m aware of are vendor-owned. Whether Open Source or not,
they are driven by a single vendor (CoreOS, Red Hat, Apprenda, etc.)
It&amp;rsquo;s interesting to see whether, in the current climate, we see a
genuinely free and open source Kubernetes distribution emerge, similar
to the role Debian plays in the Linux distribution world.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Unikernels and The End of the General Purpose Operating System</title>
      <link>/2016/11/12/the-end-of-the-general-purpose-operating-system-unikernels/</link>
      <pubDate>Sat, 12 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>/2016/11/12/the-end-of-the-general-purpose-operating-system-unikernels/</guid>
      <description>

&lt;p&gt;The &lt;a href=&#34;http://www.morethanseven.net/2016/11/05/the-end-of-the-general-purpose-operating-system-as-it-happens/&#34;&gt;previous
post&lt;/a&gt;
went into why I think the days of the general purpose operating system
(for servers) are numbered. But one interesting area I didn&amp;rsquo;t comment
on (but did talk about in the talk of the same name) was Unikernels.&lt;/p&gt;

&lt;h2 id=&#34;it-s-all-about-cost&#34;&gt;It&amp;rsquo;s all about cost&lt;/h2&gt;

&lt;p&gt;One of the topics I didn&amp;rsquo;t really touch on in discussing the end of the
generally purpose operating system was cost. Historically,
maintaining a general purpose operating system has been a costly
endeavour, something only the largest companies or communities could
sustain by themselves. Think Red Hat, Oracle, Microsoft, Sun, IBM,
Debian, etc. The result of that is the assumption when building software
that you should target one or more of a small number of operating systems.
In doing so you&amp;rsquo;re ceding some ground, and likely some revenue, to another
vendor. You&amp;rsquo;re also stuck with any underlying limitations of that OS as
well as its release cadence. And invariably you&amp;rsquo;re also stuck with the
multiplying support cost of supporting your software on multiple versions of
that OS over time.&lt;/p&gt;

&lt;p&gt;I would posit that up until relatively recently the cost of that support
burden was hugely outweighted by the cost of maintaining an actual operating
system. But that&amp;rsquo;s now changing, as I outlined in the previous post. Now a
small or medium sized software company (be it CoreOS, Rancher, Docker,
Pivotal, etc.) can build and maintain it&amp;rsquo;s own operating system as well.
This is very much about the rising level of abstraction - all of the
above leverage the huge efforts that go into the Linux kernel and into
other projects like systemd (CoreOS) or Alpine (Docker&amp;rsquo;s Moby) for
instance.&lt;/p&gt;

&lt;h2 id=&#34;enter-unikernels&#34;&gt;Enter Unikernels&lt;/h2&gt;

&lt;p&gt;But where do Unikernels fit into this narrative? I&amp;rsquo;d argue that they
represent the fulfilment of this democratization. If building and
maintaining a traditional OS is only possible for the largest of
companies, and building and maintaining a more special-purpose OS (say
for running containers, or a storage device) is cost-effective for medium
sized softare companies, then Unikernels will allow anyone to build their
own single-purpose operating systems.&lt;/p&gt;

&lt;p&gt;There are other technical reasons for (and against) Unikernels as an
approach but most focus on the technical. I think the economic side is
worth some consideration too. And not just the typical development and
support costs, but the ability to own the end-to-end unit of software
has lots of benefits, and Unikernels may make those benefits available
to everyone, including small organisations and individuals.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>The End of the General Purpose Operating System</title>
      <link>/2016/11/05/the-end-of-the-general-purpose-operating-system-as-it-happens/</link>
      <pubDate>Sat, 05 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>/2016/11/05/the-end-of-the-general-purpose-operating-system-as-it-happens/</guid>
      <description>

&lt;p&gt;As interesting chat on Twitter today reminded me that not everyone is
probably aware that we&amp;rsquo;re seeing a concerted attempt to dislodge the
general purpose operating system from our servers.&lt;/p&gt;

&lt;p&gt;I gave a talk about some of this &lt;a href=&#34;https://speakerdeck.com/garethr/the-end-of-the-general-purpose-operating-system&#34;&gt;nearly two years
ago&lt;/a&gt;
and I though a blog post looking at what I got right, what I got wrong
and what&amp;rsquo;s actually happening would be of interest to folks. The talk
was written only a few months after I joined Puppet. With a bunch
more time working for a software vendor there are some bits I missed in
my original discussion.&lt;/p&gt;

&lt;h2 id=&#34;what-do-you-mean-by-general-purpose-and-by-end&#34;&gt;What do you mean by general purpose and by end?&lt;/h2&gt;

&lt;p&gt;First up, a bit of clarification. By &lt;em&gt;general purpose OS&lt;/em&gt; I&amp;rsquo;m referring
to what most people use for server workloads today - be it RHEL or variants
like CentOS or Fedora, or Debian and derivatives like Ubuntu. We&amp;rsquo;ll
include Arch, the various BSD and opensolaris flavours and Windows too.
By &lt;em&gt;end&lt;/em&gt; I don&amp;rsquo;t literally mean they go away or stop being useful. My
hypothosis is that, slowly to begin with then more quickly, they cease
to be the default we reach for when launching new services.&lt;/p&gt;

&lt;h2 id=&#34;the-hypervisor-of-containers&#34;&gt;The hypervisor of containers&lt;/h2&gt;

&lt;p&gt;The first part of the talk included a discussion of what I&amp;rsquo;d referred to
as &lt;em&gt;the hypervisor of containers&lt;/em&gt;, what today would more likely be
referred to as a CaaS, or containers as a service. I even speculated
that VMWare would have to ship something in this space (See vSphere Integrated
Containers and the work on Photon OS) and that counting out OpenShift
would be premature (OpenShift 3 shipped predominantly as a Kubernetes
distribution). I&amp;rsquo;ll come back to why this is a threat to your beloved
Debian servers shortly.&lt;/p&gt;

&lt;h2 id=&#34;the-race-to-pid1&#34;&gt;The race to PID1&lt;/h2&gt;

&lt;p&gt;For anyone who has run Docker you&amp;rsquo;ll likely have wrestled with the
question of where does the role of the host process supervisor (probably systemd)
start and the container process supervisor (the Docker engine) end? Do
you have to interact directly with both of them?&lt;/p&gt;

&lt;p&gt;Now imagine if &lt;em&gt;all&lt;/em&gt; of the software on your servers was run in containers.
Why do I need two process supervisors now with 100% overlap? The obvious
answer is you don&amp;rsquo;t, which is why the fight between Docker and systemd
is inevitable. Note that this isn&amp;rsquo;t specific to Docker either. In-scope
for &lt;a href=&#34;https://github.com/kubernetes-incubator/cri-o&#34;&gt;cri-o&lt;/a&gt; is &lt;em&gt;Container
process lifecycle management&lt;/em&gt;.&lt;/p&gt;

&lt;h2 id=&#34;containers-as-the-unit-of-software&#34;&gt;Containers as the unit of software&lt;/h2&gt;

&lt;p&gt;Hidden behind my hypothosis, which mainly went unsaid, was
that containers are becoming the unit of software. By which I mean
the software we build or buy will increasingly be distributed as
containers and run as containers. The container will carry with it
enough metadata for the runtime to determine what resources are
required to run it.&lt;/p&gt;

&lt;p&gt;The number of simplying assumption that come from this shared contract should not
be underestimated. At least at the host level you&amp;rsquo;re likely to need lots
of near-identical hosts, all simply advertising their capabilities to
the container scheduler.&lt;/p&gt;

&lt;h2 id=&#34;operating-system-as-implementation-detail&#34;&gt;Operating system as implementation detail&lt;/h2&gt;

&lt;p&gt;What we&amp;rsquo;re witnessing in the market is the development of vertically integrated
stacks.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Docker for Mac/Windows/AWS/Azure ships with it&amp;rsquo;s own operating
system, an Alpine Linux derivative &lt;a href=&#34;http://lucjuggery.com/blog/?p=753&#34;&gt;nicknamed Moby&lt;/a&gt;, which is not intended for direct management by end users.&lt;/li&gt;
&lt;li&gt;Tectonic from CoreOS is a Kubernetes distribution which runs atop a
cluster of managed CoreOS hosts. Most of the operating system is
managed with frequent atomic rolling updates.&lt;/li&gt;
&lt;li&gt;OpenShift Enterprise from RedHat is another Kubernetes derivative,
this time running atop Atomic host.&lt;/li&gt;
&lt;li&gt;Pivotal CloudFoundry &lt;a href=&#34;https://twitter.com/jambay/status/794904634502496257&#34;&gt;ships with the IaaS, host OS, kernel, file
system, container OS all tested
together&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In all of these cases the operating system is an implementation detail
of the higher level software. It&amp;rsquo;s not intended to be directly managed,
or at least managed to the same degree as the general purpose OS you&amp;rsquo;re
running today.&lt;/p&gt;

&lt;p&gt;This is how the end comes for the majority of your general purpose
operating system running servers. The machines running containers will
be running something more single purpose, and more and more of the
software you&amp;rsquo;re running will be running in containers.&lt;/p&gt;

&lt;p&gt;The reason why you&amp;rsquo;ll do this, rather than compose everything yourself, is
compatability. Whether it&amp;rsquo;s kernel versions, file system drivers,
operating system variants or a hundred variations that make your OS
build different from mine. Building and testing software that runs
everywhere is a sisyphean task. Their is also the commercial angle at
play here, and the advantage of being able to support a single validated
product to everyone.&lt;/p&gt;

&lt;h2 id=&#34;implications&#34;&gt;Implications&lt;/h2&gt;

&lt;p&gt;There are lots of implications to this move, and it&amp;rsquo;s going to be
interesting to see how it plays out with both early adopters and
enterprise customers alike.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;What does this mean for corporate operating system policies?&lt;/li&gt;
&lt;li&gt;How do standard agent-based monitoring systems work in a world of
closed vertical stacks?&lt;/li&gt;
&lt;li&gt;Will we see this pattern for other types of service in the AWS Marketplace,
where instance launched are inaccessible but automatically updating?&lt;/li&gt;
&lt;li&gt;How does such fast moving software work in environments with rigid
change control processes or audit requirements?&lt;/li&gt;
&lt;li&gt;Many large organisations will end up running more than one of these
types of system, how best to manage such heterogenous environments?&lt;/li&gt;
&lt;li&gt;Will we see push back from some parties? In particular the open source
community who may see this mainly serving the needs of vendors?&lt;/li&gt;
&lt;li&gt;Does the end of the general purpose OS lead to greater specialism
amongst systems administrators?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I&amp;rsquo;d love to chat about any of this with other folks who have given it
some thought. It&amp;rsquo;s interesting watching grand changes play out across
the industry and picking up on patterns that are likely obvious in
hindsight. And if you like this sort of thing let me know and I&amp;rsquo;ll try
and find time for more speculation.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>InfraKit Hello World</title>
      <link>/2016/10/07/infrakit-hello-world/</link>
      <pubDate>Fri, 07 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>/2016/10/07/infrakit-hello-world/</guid>
      <description>&lt;p&gt;Docker just shipped &lt;a href=&#34;https://github.com/docker/infrakit&#34;&gt;InfraKit&lt;/a&gt; a few days ago at LinuxCon and, while at the Docker Distributed Systems Summit, I wanted to see if I could get a hello world example up and running. The documentation is lacking at the moment, epecially around how to tie the different components like instances and flavors together.&lt;/p&gt;

&lt;p&gt;The following example isn&amp;rsquo;t going to do anything particularly useful, but it&amp;rsquo;s hopefully simple enough to help anyone else trying to get started. I&amp;rsquo;m assuming you&amp;rsquo;ve checked out and built the binaries as described in the &lt;a href=&#34;https://github.com/docker/infrakit#building&#34;&gt;README&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;First create a directory. We&amp;rsquo;re going to be using InfraKit to manage local files in that directory as part of the demo.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;mkdir test
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now create an InfraKit configuration file. We&amp;rsquo;re going to use the &lt;code&gt;file&lt;/code&gt; instance plugin to manage files in out directory. This means everything works on the local machine, rather than trying to launch real infrastructure in AWS or similar. InfraKit also requires a &lt;code&gt;flavor&lt;/code&gt; plugin. I&amp;rsquo;m using &lt;code&gt;vanilla&lt;/code&gt; here just to meet the requirement for a flavor plugin, but it&amp;rsquo;s not going to actually do anything in this demo. It might be useful to write a noop flavor plugin or similar.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cat garethr.json
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #ffffff&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;{
    &lt;span style=&#34;color: #bb0066; font-weight: bold&#34;&gt;&amp;quot;ID&amp;quot;&lt;/span&gt;: &lt;span style=&#34;color: #dd2200; background-color: #fff0f0&#34;&gt;&amp;quot;garethr&amp;quot;&lt;/span&gt;,
    &lt;span style=&#34;color: #bb0066; font-weight: bold&#34;&gt;&amp;quot;Properties&amp;quot;&lt;/span&gt;: {
        &lt;span style=&#34;color: #bb0066; font-weight: bold&#34;&gt;&amp;quot;Instance&amp;quot;&lt;/span&gt; : {
            &lt;span style=&#34;color: #bb0066; font-weight: bold&#34;&gt;&amp;quot;Plugin&amp;quot;&lt;/span&gt;: &lt;span style=&#34;color: #dd2200; background-color: #fff0f0&#34;&gt;&amp;quot;instance-file&amp;quot;&lt;/span&gt;,
            &lt;span style=&#34;color: #bb0066; font-weight: bold&#34;&gt;&amp;quot;Properties&amp;quot;&lt;/span&gt;: {
            }
        },
        &lt;span style=&#34;color: #bb0066; font-weight: bold&#34;&gt;&amp;quot;Flavor&amp;quot;&lt;/span&gt; : {
            &lt;span style=&#34;color: #bb0066; font-weight: bold&#34;&gt;&amp;quot;Plugin&amp;quot;&lt;/span&gt;: &lt;span style=&#34;color: #dd2200; background-color: #fff0f0&#34;&gt;&amp;quot;flavor-vanilla&amp;quot;&lt;/span&gt;,
            &lt;span style=&#34;color: #bb0066; font-weight: bold&#34;&gt;&amp;quot;Properties&amp;quot;&lt;/span&gt;: {
                &lt;span style=&#34;color: #bb0066; font-weight: bold&#34;&gt;&amp;quot;Size&amp;quot;&lt;/span&gt;: &lt;span style=&#34;color: #0000DD; font-weight: bold&#34;&gt;1&lt;/span&gt;
            }
        }
    }
}
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;InfraKit is based on running separate plugins. Each plugin runs as a separate process and provides a filesystem socket in /run/infrakit/plugins. First start up the file plugin:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ./infrakit/file --dir=./test
INFO[0000] Starting plugin
INFO[0000] Listening on: unix:///run/infrakit/plugins/instance-file.sock
INFO[0000] listener protocol= unix addr= /run/infrakit/plugins/instance-file.sock err= &amp;lt;nil&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Next, in a separate terminal run the vanilla plugin:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ./infrakit/vanilla
INFO[0000] Starting plugin
INFO[0000] Listening on: unix:///run/infrakit/plugins/flavor-vanilla.sock
INFO[0000] listener protocol= unix addr= /run/infrakit/plugins/flavor-vanilla.sock err= &amp;lt;nil&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;An finally run the group plugin. I&amp;rsquo;m passing &lt;code&gt;--log=5&lt;/code&gt; to enable more verbose outout so it&amp;rsquo;s easier to see what&amp;rsquo;s going on with the group.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ./infrakit/group --log=5
INFO[0000] Starting discovery
DEBU[0000] Opening: /run/infrakit/plugins
DEBU[0000] Discovered plugin at unix:///run/infrakit/plugins/instance-file.sock
INFO[0000] Starting plugin
INFO[0000] Starting
INFO[0000] Listening on: unix:///run/infrakit/plugins/group.sock
INFO[0000] listener protocol= unix addr= /run/infrakit/plugins/group.sock err= &amp;lt;nil&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;With that all setup we can create a group based on our configuration file from above.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ./infrakit/cli group --name group watch garethr.json
watching garethr
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Have a look in the test directory. You should see a single file has been created.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ls test
instance-1475833380
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Let&amp;rsquo;s delete that file and see what happens:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;rm test/*
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Hopefully InfraKit will spot the instance (a file in this case) no longer exists and recreate it. You should see something like the following in the logs:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;INFO[0612] Created instance instance-1475833820 with tags map[infrakit.config_sha:B2MsacXz8V_ztsjAzu3tu3zivlw= infrakit.group:garethr]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This is obviously a less-than-useful example but hopefully provides a good hello world example for anyone trying to run InfraKit in it&amp;rsquo;s current early stage.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Everyone is Not a Software Company</title>
      <link>/2016/07/05/everyone-is-not-a-software-company/</link>
      <pubDate>Tue, 05 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>/2016/07/05/everyone-is-not-a-software-company/</guid>
      <description>

&lt;p&gt;The &lt;em&gt;Everyone is a Software Company&lt;/em&gt; meme has been around for a
&lt;a href=&#34;http://www.forbes.com/sites/techonomy/2011/11/30/now-every-company-is-a-software-company/#22c372311009&#34;&gt;number&lt;/a&gt;
&lt;a href=&#34;http://www.zdnet.com/article/now-that-everyone-is-a-software-company-should-they-operate-like-software-companies/&#34;&gt;of&lt;/a&gt;
&lt;a href=&#34;http://blogs.gartner.com/peter-sondergaard/everyone-is-a-technology-company/&#34;&gt;years&lt;/a&gt;,
but it feels increasingly hard to get away from recently. That prompted
this post.&lt;/p&gt;

&lt;h2 id=&#34;but-what-do-we-mean-by-software-company&#34;&gt;But what do we mean by Software Company?&lt;/h2&gt;

&lt;p&gt;To be software company you&amp;rsquo;re going to need to employee software
engineers and other professionals. Applying that logic to a large
number of companies at once, and looking at how existing
&lt;em&gt;software companies&lt;/em&gt; are setup, we find a few large problems.&lt;/p&gt;

&lt;h2 id=&#34;google-as-an-example&#34;&gt;Google as an example&lt;/h2&gt;

&lt;p&gt;In my talk at Velocity, entitled &lt;a href=&#34;https://speakerdeck.com/garethr/the-two-sides-to-google-infrastructure-for-everyone-else&#34;&gt;The Two Sides of Google Infrastructure
for Everyone
Else&lt;/a&gt;
I argued both for and against the idea of wholesale adoption of
Google-like software and development/operations practices.
Even though they derive the lions share of revenue from advertising it&amp;rsquo;s
easy to argue that Google are a software company. But what does that look like?
What makes Google a software company?&lt;/p&gt;

&lt;p&gt;From the &lt;a href=&#34;https://abc.xyz/investor/pdf/20151231_alphabet_10K.pdf&#34;&gt;Google Annual Report
2015&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;61,814 full-time employees: 23,336 in research and development,
19,082 in sales and marketing, 10,944 in operations, and 8,452
in general and administrative functions&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So, roughly 50% of Google is involved in building or running software.
&lt;a href=&#34;https://www.glassdoor.com/Salary/Google-Salaries-E9079.htm&#34;&gt;Glassdoor&lt;/a&gt;
says salaries for engineers at Google average about $126,000-$162,000.&lt;/p&gt;

&lt;p&gt;The &lt;a href=&#34;http://www.bls.gov/ooh/computer-and-information-technology/software-developers.htm&#34;&gt;US Bureau of Labor Statistics says&lt;/a&gt;
that in 2014 the number of computer programming jobs in the US
was 1,114,000, with median pay in 2015 of $100,690 a year. The
total number of jobs in the US is about 143 million, with the
average wages at $44,569.20 according to the &lt;a href=&#34;https://www.ssa.gov/oact/cola/awidevelop.html&#34;&gt;Social Security
Administration&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The Google Annual Report also states:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Competition for qualified personnel in our industry is intense,
particularly for software engineers, computer
scientists, and other technical staff&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;So, quick summary:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Software engineers are expensive relative to others employees&lt;/li&gt;
&lt;li&gt;Demand for the best engineers means even higher wages&lt;/li&gt;
&lt;li&gt;Proportionally there aren&amp;rsquo;t many software developers&lt;/li&gt;
&lt;li&gt;There isn&amp;rsquo;t a large surplus of unemployed software engineers&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now the data above is mainly from US sources, although the Google data
is from an international company with offices around the world. My
experience says this is likely similar in Europe. Looking into data for
India and China would be super interesting I&amp;rsquo;d wager.&lt;/p&gt;

&lt;h2 id=&#34;problems&#34;&gt;Problems&lt;/h2&gt;

&lt;p&gt;One obvious problem is short-term supply and demand. Everyone wants
experienced software folks for their transformation effort. But the more
organisations that buy into the &lt;em&gt;everyone is a software company&lt;/em&gt; story
the greater the demand for a finite supply of people. For most
that means you&amp;rsquo;ll to able to find less people that you want because of
competition and afford even less people because all that competition
pushes up salaries.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve seen that firsthand while working for the UK Government. People
occasionally complained that Government was hampering commercial
organisations growth by employing lots of developers and operations
people in London.&lt;/p&gt;

&lt;p&gt;You&amp;rsquo;re also immediately in competition for software professionals with
existing software companies. Given the high salaries, most of
those employers already have developer friendly working environments and
established hiring practices suited to luring developers to work for
them. This sort of special case is hard for large companies without an
existing empowered developer organisation. I saw a lot of that at the
Government as well.&lt;/p&gt;

&lt;p&gt;But the real macro problems are much more interesting. Even if you think
50% is a high mark for the ratio of software folk to others, you probably
agree you need a lot more than you have today. And those developers just
don&amp;rsquo;t exist today to allow &lt;em&gt;everyone to be a software company&lt;/em&gt;. Nor
would I argue is education in the near term producing enough skilled
people to fill that gap tomorrow. So, what happens?&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Does everyone sort-of become a software company but not quite?&lt;/li&gt;
&lt;li&gt;Do most organisations struggle to hire and maintain a software team
and see the endeavour fail?&lt;/li&gt;
&lt;li&gt;Do increasing numbers of developers end up working for a small number
of larger and larger software companies?&lt;/li&gt;
&lt;li&gt;Does outsourcing bounceback,  adapt and demonstrate innovation and
transformation qualities to go along with the scale?&lt;/li&gt;
&lt;li&gt;Countries like India or China are able to produce enough software engineers
at scale to allow there companies to act on everyone becoming a
software company?&lt;/li&gt;
&lt;li&gt;We see clear winners and losers, ie. companies which become software
companies and accelarate away from those that don&amp;rsquo;t?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Personally I think to take advantage of the idea behind the meme we&amp;rsquo;re
going to need order of magnitude more efficient approaches to software
delivery. What that looks like is the most interesting question of all.&lt;/p&gt;

&lt;h2 id=&#34;caveats&#34;&gt;Caveats&lt;/h2&gt;

&lt;p&gt;The above is not a detailed analysis, and undoutedly has a few holes. It
also doesn&amp;rsquo;t overly question the &lt;em&gt;advantage&lt;/em&gt; of being a software
company, or really question what we actually mean by &lt;em&gt;everyone&lt;/em&gt;. But I
think the central point holds: Everyone is NOT a software company, nor
will everyone be a software company any time soon, unless we come up
with a fundamentally better approach to service delivery.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Operations is more than just Systems Administration</title>
      <link>/2015/12/27/operations-more-than-systems-administration/</link>
      <pubDate>Sun, 27 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>/2015/12/27/operations-more-than-systems-administration/</guid>
      <description>

&lt;p&gt;I think one of the patterns of the last few years has been the
democratization of systems administration, especially for web
applications. Whether that&amp;rsquo;s Heroku or Docker, or Chef or Puppet, more
and more traditional developers are doing work that would have been
&lt;em&gt;somebody else&amp;rsquo;s problem&lt;/em&gt; only a few years ago. But running in parallel
to that thread is another less positive trend, that of conflating
operations with &lt;em&gt;just&lt;/em&gt; systems administation. The story seems to go that
now we know Ansible (or some other tool) we just need developers to run
the show.&lt;/p&gt;

&lt;p&gt;In this post I&amp;rsquo;m going to try and introduce some of the other
operational disciplines, especially for developers who maybe have come
to operations via the above resurgence in infrastructure tooling over
the past few years.&lt;/p&gt;

&lt;p&gt;Note that this post has a slight bias towards more &lt;em&gt;normal&lt;/em&gt;
organisations. That is to say if you&amp;rsquo;re in a 5 person software startup
you probably don&amp;rsquo;t have operational problems to worry too much about
yet. I&amp;rsquo;m also not playing down the practice of systems administration,
most experienced sysadmins I know are also quite rounded operations pros
as well.&lt;/p&gt;

&lt;h2 id=&#34;service-management&#34;&gt;Service Management&lt;/h2&gt;

&lt;p&gt;If you&amp;rsquo;ve worked in operations, or in many large organisations you&amp;rsquo;ll have
come across the term Service Management. This tends to be linked to
various service management frameworks; like ITIL or MOF (Microsoft
Operations Framework). The framework will describe, often in great
detail, activities and processes for things like incident response,
configuration management, change management, capacity planning and more.&lt;/p&gt;

&lt;p&gt;While I was at &lt;a href=&#34;https://gds.blog.gov.uk/&#34;&gt;The Government&lt;/a&gt; I wrote what I
think is a reasonable introduction to &lt;a href=&#34;https://www.gov.uk/service-manual/operations/service-management.html&#34;&gt;Service
Management&lt;/a&gt;
albeit from a specific point-of-view. This was based on my experience of
trying, and likely sometimes failing, to encourage teams to think about
how the products they we&amp;rsquo;re working on would be run. Each of the topics
touched on in the overview is worthy of it&amp;rsquo;s own stack of books, but I
will repeat the ITIL service list here as (whatever you might think of
the framework or a specific implementation) I&amp;rsquo;d found it a useful starting
point for conversations - in particular stressing the breadth of
topics under service management.&lt;/p&gt;

&lt;h4 id=&#34;service-strategy&#34;&gt;Service Strategy&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;IT service management&lt;/li&gt;
&lt;li&gt;Service portfolio management&lt;/li&gt;
&lt;li&gt;Financial management for IT services&lt;/li&gt;
&lt;li&gt;Demand management&lt;/li&gt;
&lt;li&gt;Business relationship management&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;service-design&#34;&gt;Service Design&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Design coordination&lt;/li&gt;
&lt;li&gt;Service Catalogue management&lt;/li&gt;
&lt;li&gt;Service level management&lt;/li&gt;
&lt;li&gt;Availability management&lt;/li&gt;
&lt;li&gt;Capacity Management&lt;/li&gt;
&lt;li&gt;IT service continuity management&lt;/li&gt;
&lt;li&gt;Information security management system&lt;/li&gt;
&lt;li&gt;Supplier management&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;service-transition&#34;&gt;Service Transition&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Transition planning and support&lt;/li&gt;
&lt;li&gt;Change management&lt;/li&gt;
&lt;li&gt;Service asset and configuration management&lt;/li&gt;
&lt;li&gt;Release and deployment management&lt;/li&gt;
&lt;li&gt;Service validation and testing&lt;/li&gt;
&lt;li&gt;Change evaluation&lt;/li&gt;
&lt;li&gt;Knowledge management&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;service-operation&#34;&gt;Service Operation&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Event management&lt;/li&gt;
&lt;li&gt;Incident management&lt;/li&gt;
&lt;li&gt;Request fulfillment&lt;/li&gt;
&lt;li&gt;Problem management&lt;/li&gt;
&lt;li&gt;Identity management&lt;/li&gt;
&lt;li&gt;Continual Service Improvement&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For each of the above points, whether you are using ITIL or not, it&amp;rsquo;s
useful to have a conversation. Some of these areas do provide ample
opportunity for automation and for using tooling to minimise the effort
required. But much of this is about designing &lt;em&gt;how&lt;/em&gt; you are going to
operate a service throughout it&amp;rsquo;s lifetime.&lt;/p&gt;

&lt;h2 id=&#34;operations-user-stories&#34;&gt;Operations user stories&lt;/h2&gt;

&lt;p&gt;One of the other things I published while at The Government was a set of
&lt;a href=&#34;https://www.gov.uk/service-manual/operations/web-operations-stories.html&#34;&gt;user stories for a web operations
team&lt;/a&gt;.
These grew out of work on launching GOV.UK and have had input from
various past colleagues. In hindsight I&amp;rsquo;d probably do somethings
here differently, the stories assume a certain context which isn&amp;rsquo;t explicitly
spelled out for instance. But they have a couple of things going for them in that
they demonstrate how traditional operations activities can be planned out as part
of a more developer-friendly planning approach, and also they are public and
have been tested by more than a single team.&lt;/p&gt;

&lt;h2 id=&#34;not-everything-is-a-programming-problem&#34;&gt;Not everything is a programming problem&lt;/h2&gt;

&lt;p&gt;The main point I think is that not everything can be turned into a
programming problem to solve. Automation has it&amp;rsquo;s place, and many manual
processes and practices can benefit from automation. But the wide range
of activities involved in running a non-trivial and often non-ideal
system in production tend to mean making trade-offs and prioritization
decisions frequently. This is where softer skills like arguing for
funding or additional head count, or building a business case for
further work, come into play. Operations management is much more than
systems administration.&lt;/p&gt;

&lt;h2 id=&#34;further-reading&#34;&gt;Further reading&lt;/h2&gt;

&lt;p&gt;This is little more than a plea for people to think more about
operations, separate to the more technical aspects of systems
administration. If you&amp;rsquo;re interested in learning more however I would
recommend some good reading material:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.itpi.org/the-visible-ops-handbook-review.html&#34;&gt;Visible Ops
Handbook&lt;/a&gt; -
still an excellent and pragmatic introduction to many of the topics
noted above.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://shop.oreilly.com/product/0636920033080.do&#34;&gt;Designig Delivery&lt;/a&gt; -
a bang up-to-date tome covering a range of service design topics.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.basicsm.com/bsm-basic-service-management-book&#34;&gt;Basic Service
Management&lt;/a&gt; -
a 50 page starter book covering the fundamentals of service
management as generally discussed in more detail elsewhere. A great
starting point.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Provisioning droplets with Puppet</title>
      <link>/2015/12/04/provisioning-droplets-with-puppet/</link>
      <pubDate>Fri, 04 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>/2015/12/04/provisioning-droplets-with-puppet/</guid>
      <description>

&lt;p&gt;I love &lt;a href=&#34;https://www.digitalocean.com/&#34;&gt;DigitalOcean&lt;/a&gt; for quickly spinning
up machines. I also like managing my infrastructure using Puppet. Enter the
&lt;a href=&#34;https://forge.puppetlabs.com/garethr/digitalocean&#34;&gt;garethr-digitalocean&lt;/a&gt; module.
This currently provides a single Puppet type; &lt;code&gt;droplet&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Lets show a quick example of that, by launching two droplets, called
test-digitalocean and test-digitalocean-1.&lt;/p&gt;
&lt;div class=&#34;highlight&#34; style=&#34;background: #ffffff&#34;&gt;&lt;pre style=&#34;line-height: 125%&#34;&gt;&lt;span&gt;&lt;/span&gt;&lt;span style=&#34;color: #336699&#34;&gt;droplet&lt;/span&gt; { [&lt;span style=&#34;color: #dd2200; background-color: #fff0f0&#34;&gt;&amp;#39;test-digitalocean&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color: #dd2200; background-color: #fff0f0&#34;&gt;&amp;#39;test-digitalocean-1&amp;#39;&lt;/span&gt;]:
  &lt;span style=&#34;color: #336699&#34;&gt;ensure&lt;/span&gt; =&amp;gt; &lt;span style=&#34;color: #008800; font-weight: bold&#34;&gt;present&lt;/span&gt;,
  &lt;span style=&#34;color: #336699&#34;&gt;region&lt;/span&gt; =&amp;gt; &lt;span style=&#34;color: #dd2200; background-color: #fff0f0&#34;&gt;&amp;#39;lon1&amp;#39;&lt;/span&gt;,
  &lt;span style=&#34;color: #336699&#34;&gt;size&lt;/span&gt;   =&amp;gt; &lt;span style=&#34;color: #dd2200; background-color: #fff0f0&#34;&gt;&amp;#39;512mb&amp;#39;&lt;/span&gt;,
  &lt;span style=&#34;color: #336699&#34;&gt;image&lt;/span&gt;  =&amp;gt; &lt;span style=&#34;color: #0000DD; font-weight: bold&#34;&gt;14169855&lt;/span&gt;,
}
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;With the above manifest saved as &lt;code&gt;droplets.pp&lt;/code&gt; we can run it with:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ puppet apply --test droplets,pp
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will ensure those two droplets exist in that region, and have that
size. If they don&amp;rsquo;t exist it will launch droplets using the specified image.
This means we can run the same command again, and rather that create
more instances it will simply report that we currently have those
droplets already.&lt;/p&gt;

&lt;h2 id=&#34;querying-resources&#34;&gt;Querying resources&lt;/h2&gt;

&lt;p&gt;Puppet also comes with &lt;code&gt;puppet resource&lt;/code&gt;, a handy way of querying the
state of a given resource or type. Running the following will list all
of your droplets, whether you created them using Puppet or not.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ puppet resource droplet
droplet { &#39;test-digitalocean&#39;:
  ensure              =&amp;gt; &#39;present&#39;,
  backups             =&amp;gt; &#39;false&#39;,
  image               =&amp;gt; &#39;14169855&#39;,
  image_slug          =&amp;gt; &#39;ubuntu-15-10-x64&#39;,
  ipv6                =&amp;gt; &#39;true&#39;,
  price_monthly       =&amp;gt; &#39;10.0&#39;,
  private_address     =&amp;gt; &#39;10.131.98.186&#39;,
  private_networking  =&amp;gt; &#39;true&#39;,
  public_address      =&amp;gt; &#39;178.62.25.100&#39;,
  public_address_ipv6 =&amp;gt; &#39;2A03:B0C0:0001:00D0:0000:0000:0090:B001&#39;,
  region              =&amp;gt; &#39;lon1&#39;,
  size                =&amp;gt; &#39;1gb&#39;,
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;mutating-resources&#34;&gt;Mutating resources&lt;/h2&gt;

&lt;p&gt;The type also supports mutating droplets, for instance changing the
size of a droplet if you change the model in Puppet. The API client
doesn&amp;rsquo;t support all possible changes, but you can disable backups, enable
IPv6 and switch on private networking as needed. Here&amp;rsquo;s a quick sample
of the output showing this in action.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Info: Loading facts
Notice: Compiled catalog for gareths-macbook.local in environment production in 0.43 seconds
Info: Applying configuration version &#39;1449225401&#39;
Info: Checking if droplet test-digitalocean exists
Info: Powering off droplet test-digitalocean
Info: Resizing droplet test-digitalocean
Info: Powering up droplet test-digitalocean
Notice: /Stage[main]/Main/Droplet[test-digitalocean]/size: size changed &#39;1gb&#39; to &#39;512mb&#39;
Error: Disabling IPv6 for test-digitalocean is not supported
Error: /Stage[main]/Main/Droplet[test-digitalocean]/ipv6: change from true to false failed: Disabling IPv6 for test-digitalocean is not supported
Error: Disabling private networking for test-digitalocean is not supported
Error: /Stage[main]/Main/Droplet[test-digitalocean]/private_networking: change from true to false failed: Disabling private networking for test-digitalocean is not supported
Info: Checking if droplet test-digitalocean-1 exists
Info: Created new droplet called test-digitalocean-1
Notice: /Stage[main]/Main/Droplet[test-digitalocean-1]/ensure: created
Info: Class[Main]: Unscheduling all events on Class[Main]
Notice: Applied catalog in 60.61 seconds
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;but-why&#34;&gt;But why?&lt;/h2&gt;

&lt;p&gt;Describing your infrastructure at this level in code has several advantages:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Having a shared model of your infrastructure in code allows for a discussion
around that model&lt;/li&gt;
&lt;li&gt;You can be convident in the model because of the idempotent nature of running
the code&lt;/li&gt;
&lt;li&gt;The use of code for this model allows for activities like code review, change
control based on pull requests, unit testing, user created abstrations and more&lt;/li&gt;
&lt;li&gt;The use of Puppet means you can use it as above as a command line interface, or
run it every period of time to enfore and report on the state of you infrastructure&lt;/li&gt;
&lt;li&gt;Puppet ecosystem tools like PuppetDB, Puppet Board or Puppet Enterprise mean you can
store data over time for later analysis&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The module also acts as a reasonable example of a simple Puppet type and provider.
If you&amp;rsquo;re interested in extending Puppet for your own services this is hopefully a
good place to start understanding the API.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Some Security Implication of Unikernels</title>
      <link>/2015/09/20/security-implications-of-unikernels/</link>
      <pubDate>Sun, 20 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>/2015/09/20/security-implications-of-unikernels/</guid>
      <description>

&lt;p&gt;I was attending the first &lt;a href=&#34;http://gotocon.com/goto-london-2015/&#34;&gt;GOTO London conference&lt;/a&gt; last week, in particlar the &lt;a href=&#34;https://www.ruggedsoftware.org/&#34;&gt;Rugged&lt;/a&gt; Track. One of the topics of conversation that came up was unikernels, and their potential for improving the state of software security. Unikernels are pretty new outside research groups, I’m just lucky enough to live and work in Cambridge where some of that research is happening. The security advantages of unikernels are one of the things that attracted me in the first place. I thought it might be interesting to jot a few of those down for other people interested in security and the future of infrastructure.&lt;/p&gt;

&lt;p&gt;As with my &lt;a href=&#34;http://www.morethanseven.net/2015/08/21/operating-unikernel-challenges/&#34;&gt;last post&lt;/a&gt;, it’s worth having a basic understand of Unikernels. I’d recommend reading &lt;a href=&#34;http://queue.acm.org/detail.cfm?id=2566628&#34;&gt;Unikernels - the rise of the virtual library operating system&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;hypervisor&#34;&gt;Hypervisor&lt;/h2&gt;

&lt;p&gt;Every unikernel is provided the isolation guarantees from a hypervisor. Not only are these guarantees reasonably well understood, they tend to make use of hardware features too. It’s interesting to note that recent container runtime work is heading in this direction too, with ptojects like &lt;a href=&#34;https://clearlinux.org/features/clear-containers&#34;&gt;Clear Containers from Intel&lt;/a&gt;, &lt;a href=&#34;https://blogs.vmware.com/cloudnative/introducing-project-bonneville/&#34;&gt;Bonneville from VMware&lt;/a&gt; and the &lt;a href=&#34;https://coreos.com/blog/rkt-0.8-with-new-vm-support/&#34;&gt;new stage1 in rkt&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;no-user-space&#34;&gt;No User Space&lt;/h2&gt;

&lt;p&gt;With a typical server OS we have kernel space and user space. Part of the idea here is to ensure the underlying machine doesn’t crash, whatever horrible things people do in user space. But this means &lt;em&gt;you can do horrible things&lt;/em&gt;. The unikernel model is similar to the Erlang philosophy of &lt;em&gt;let it crash&lt;/em&gt;. You only have kernel space, you entire application resides in it. Most things out of the ordinary are going to crash the kernel. This makes the sort of exploratory testing useful in exploit development harder.&lt;/p&gt;

&lt;h2 id=&#34;really-immutable-infrastructure&#34;&gt;Really Immutable Infrastructure&lt;/h2&gt;

&lt;p&gt;People often talk about immutable infrastructure. I’d wager there is more talk than reality however. When you push, people are often not using read-only file systems and retain the capability to login to machines to make ad-hoc changes. What they mean by immutable is that they only change machines at deploy time. This ignores both the fact they have the technical capability to change them anytime, and that an attacker could change them outside that deployment cycle. With unikernel systems there is often just the compiled kernel, you can’t just change files on disk. The defaults force an immutable way of working.&lt;/p&gt;

&lt;h2 id=&#34;clean-slate-tls&#34;&gt;Clean Slate TLS&lt;/h2&gt;

&lt;p&gt;As a typical developer or operator you’ve probably learned more than you wanted to know about the OpenSSL source code. It’s not well understood and not likely to be so anytime soon and has some pretty spectacular bugs like &lt;a href=&#34;http://heartbleed.com/&#34;&gt;Heartbleed&lt;/a&gt;. The &lt;a href=&#34;https://www.coreinfrastructure.org/&#34;&gt;Core Infrastructure Initiative&lt;/a&gt; is laudable and will improve things but it’s still a problematic codebase. Functional programming is often regarded as an easier way of writing understandable code. Types are a good thing, especially when it comes to security systems. So a pure &lt;a href=&#34;https://mirage.io/blog/introducing-ocaml-tls&#34;&gt;OCaml TLS&lt;/a&gt; implementation as used by &lt;a href=&#34;https://mirage.io/&#34;&gt;MirageOS&lt;/a&gt; makes sense on lots of levels. Yes this is quite an undertaking, but the &lt;a href=&#34;http://amirchaudhry.com/bitcoin-pinata/&#34;&gt;bitcoin pinata&lt;/a&gt; tests show promise.&lt;/p&gt;

&lt;h2 id=&#34;formal-proofs&#34;&gt;Formal Proofs&lt;/h2&gt;

&lt;p&gt;Knowing whether an application really does exactly what you want it to do (and no more) is a hard problem to solve. Unit tests and other form of automated testing help, but are still reliant on people to both write and design the tests. A formal proof system can provide much stronger guarentees of correctness, it’s an approach used in some cases for missing-critical components of &lt;a href=&#34;http://cacm.acm.org/magazines/2015/4/184701-how-amazon-web-services-uses-formal-methods/fulltext&#34;&gt;Amazon’s AWS&lt;/a&gt;. MirageOS is implemented in OCaml. One of the most popular OCaml programmes is &lt;a href=&#34;https://coq.inria.fr/&#34;&gt;Coq&lt;/a&gt;, which just so happens to be a formal proof management system. I’ve not seen many examples yet of this approach, probably due to the effort involved, but the capability is there for building formally specified unikernels. I’d wager a similar thing is possible with Haskell and &lt;a href=&#34;https://github.com/GaloisInc/HaLVM&#34;&gt;HalVM&lt;/a&gt;. Making that easier to do for typical developers could open up much more secure development practices for certain usecases.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>A Discussion of The Operational Challenges With Unikernels</title>
      <link>/2015/08/21/operating-unikernel-challenges/</link>
      <pubDate>Fri, 21 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>/2015/08/21/operating-unikernel-challenges/</guid>
      <description>

&lt;h2 id=&#34;what-are-unikernels&#34;&gt;What are Unikernels&lt;/h2&gt;

&lt;p&gt;Most of this post assumes a basic understanding of what unikernels are
so I’d recommend reading &lt;a href=&#34;http://queue.acm.org/detail.cfm?id=2566628&#34;&gt;Unikernels – the rise of the virtual library
operating system&lt;/a&gt; before moving
on.&lt;/p&gt;

&lt;h2 id=&#34;why-are-unikernels-interesting&#34;&gt;Why are Unikernels interesting&lt;/h2&gt;

&lt;p&gt;As a starting point: complexity. Managing infrastructure, and the
software that runs on it, is too complicated. You can impose
organisational rules to control this complexity (we only deploy on
Debian, we only run JVM applications, the only allowed database is
MySQL) but that limits you in other ways too, and in reality is nearly
always broken somewhere in any non-trivial environment (this appliance
uses Ubuntu, this software is only certified on Windows, PostgreSQL
doesn’t run on the JVM). So you turn to software to manage that
complexity; Puppet or Chef do a great job of allowing configuration
complexity to be managed in code (where you can test it) and Docker
allows for bundles of complexity to be isolated from other bundles of
complexity. But there are still an awful lot of moving parts.&lt;/p&gt;

&lt;p&gt;Another reason is the growing realisation that security is important.
Securing systems on the internet is hard. Even though the basics are
broadly understood they are often not implemented, and the people
attempting to compromise systems are smart, well paid and highly
incentivised (basically like you). It’s generally easier to break
something than to build it. Part of this is a numbers game – to run a
reasonable sixed system you might need to run 50 different services, and
install 200 packages on every host. An attacker has to compromise just
one of those to win.&lt;/p&gt;

&lt;p&gt;A further reason, if one were needed, is the proliferation of many small
internet connected devices, aka. The Internet of Things. Part of this
relates to the above points about security concerns, but some of it is
simply a matter of managing that many single purpose, low power,
devices. The overhead of a typical general purpose operating system and
application runtime just don’t fit this model.&lt;/p&gt;

&lt;p&gt;Enter unikernels. Unikernels actually remove unneeded complexity. You’re
running a hypervisor and the unikernel and that’s it. The unikernel
contains only those libraries that you have specifically required. That
drastically reduces the surface area for attack as well as meaning
you’re running less software, hopefully enough less that your power
needs are reduced too. By specifically requiring individual libraries
you’re also making complexity visible. Rather than using a general
purpose operating system with it’s 100s of packages and millions of
lines of code you are at least choosing what to include.&lt;/p&gt;

&lt;h2 id=&#34;operational-challenges&#34;&gt;Operational challenges&lt;/h2&gt;

&lt;p&gt;While I think some part of the future looks like unikernels their are
some large operational challenges to overcome before they break out of
very specific niches or research projects. Note that&lt;/p&gt;

&lt;p&gt;there are architectural and software development challenges as well, I
just happen to think they’re easier to deal with.&lt;/p&gt;

&lt;h3 id=&#34;development-environment&#34;&gt;Development environment&lt;/h3&gt;

&lt;p&gt;There are a few properties of a development environment that I think are
essential to modern development; development/production parity being one
of the most important. Tools like Vagrant, and a move towards
infrastructure as code, and more recently Docker have made great strides
here in the past several years. The different unikernel implementations
are generally based on lesser known software stacks (Haskell, OCaml,
Erlang, etc) so some of this is familiarity. But what does
development/production partity mean for a unikernel based system? We’re
not just talking about the individual unikernel here either – how do I
deploy unikernels? How do I compose several unikernels together to build
an application? What does a Continuous integration or deployment
pipeline look like? In my view the unikernel movement should focus some
efforts here. Not only will this make it easier for people to get
started, but having strong opinions early will allow the nascent
community to solve the problem together, rather than everyone solving it
just-in-time for themselves.&lt;/p&gt;

&lt;h3 id=&#34;managing-the-hypervisor&#34;&gt;Managing the hypervisor&lt;/h3&gt;

&lt;p&gt;I’d argue today most developers don’t spent much time directly working
with hypervisors. Either you’re running on an in-house VMware, KVM or
Xen install with some (hopefully self-service, automated) provisioning
mechanism in place or you’re using a public cloud like AWS, Azure, etc.
The current generation of unikernel systems mainly target Xen. I think
in the short term at least this means getting to know the hypervisor.
Xen is solid software, but I don’t see a great deal of automation around
it – say well maintained Puppet modules, API clients or a Terraform
provider. In the long term we’ll hopefully have higher level interfaces,
but in the short term efforts here would lower the barrier to entry
considerably.&lt;/p&gt;

&lt;h4 id=&#34;double-down-on-aws&#34;&gt;Double down on AWS&lt;/h4&gt;

&lt;p&gt;Given the above, and given the ubiquity of EC2 (which is based on Xen)
it might be wise to build up first-class tools around using EC2 as a
target environment for unikernel deployments. EC2 supports custom
kernels, but these require a number of convoluted steps that could be
automated away (note that I’m talking about more than just a shell
script here). Also what are the best practices around autoscaling groups
andunikernels? Or VPC networks and unikernels?&lt;/p&gt;

&lt;h3 id=&#34;the-network&#34;&gt;The network&lt;/h3&gt;

&lt;p&gt;With the explosion in containers and microservices it’s becoming clearer
(if it wasn’t already) how important the network is. By removing the
operating system we remove things like host firewalls and the new breed
of overlay networks. At the same time if we are to tap the dynamic
potential of unikernels we’ll need a similarly dynamic and automatable
network. Maybe this becomes more of an application concern, with
services communicating via other services which act as firewalls and
intelligent proxies, but that still leaves the underlying network to be
managed.&lt;/p&gt;

&lt;h3 id=&#34;debugging&#34;&gt;Debugging&lt;/h3&gt;

&lt;p&gt;However much testing you do beforehand you’ll still likely end up with
problems in production, and as you scale up you’ll hit issues that you
simply can’t recreate outside the live environment. This is were good
debugging capabilities come in. While general purpose operating systems
might be complex they are well know, and tools like ps, top, free, ping,
telnet, netcat, dtrace, etc. are commonly used by anyone debugging
systems. Note that in many cases you’re debugging a combination of
systems; is the performance issue an application problem, a network
problem, a storage problem or some interesting combination of several
facters?&lt;/p&gt;

&lt;p&gt;By removing the general purpose operating system, unikernel based
environments remove most of the current debugging tools at the same
time. Part of this Is good application development hygiene (logs,
metrics and status endpoints for instance), but what about the more
interactive debugging practices? What does debugging a system based on
unikernels look like?&lt;/p&gt;

&lt;h3 id=&#34;orchestration&#34;&gt;Orchestration&lt;/h3&gt;

&lt;p&gt;The word may be overloaded but the need to arrange and manage a number
of components that make up a larger system is a real need. This might be
something like Docker&amp;rsquo;s Compose file or &lt;a href=&#34;https://brooklyn.incubator.apache.org/learnmore/blueprint-tour.html&#34;&gt;Brooklyn&amp;rsquo;s
Blueprints&lt;/a&gt;,
or it could be something more akin to the APIs from Cloud Foundry,
Kubernetes or Mesos. Testing some of these models with unikernel based systems
will be an interesting test of how coupled to containers the existing models are.
The lack of legacy again opens up the potential to come up with a truly
modern alternative here too.&lt;/p&gt;

&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Unless you’re in an environment where security is your number 1 concern
then the current state of Unikernels probably means choosing to adopt
them now is a little bleeding edge. But I think that will change over
time as the various projects mature and address some of the issues
described above. In the meantime I’d love to see more discussion of some
of the operational challenges. I think talking about the needs of
operators at this early stage should make the resulting ecosystems more
robust whsen it comes to future production deployments.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>